#!/usr/bin/env python

"""
Start ROS node to pubblish torques for manuvering windowx arm using a Robust Quaternion-based Cooperative
controller without Force/Torque Information on its non adaptive version.
"""

#Ros handlers services and messages
import rospy, roslib
from windowx_msgs.msg import TargetConfiguration
from std_msgs.msg import Float32MultiArray, MultiArrayDimension
from windowx_driver.srv import *
#Math stuff
from math import sin, cos, atan2, pi, sqrt
from numpy.linalg import inv, det, norm, pinv
import numpy as np
#Arm parameters
from windowx_arm import *

# Do I need this ?
import time
import cv2


class WindowxController():
    """Class to compute and pubblish joints torques"""
    def __init__(self):
        #Object parameters
        self.m_obj = 0.062 #0.2 #Kg
        self.l1_obj = 0.135 #m
        self.l2_obj =  0.044 #m
        self.go = np.array([[0], [self.m_obj*9.81], [0]])
        i_obj = (self.m_obj/12)*(self.l1_obj**2 + self.l2_obj**2) #0.0067
        self.Io = np.matrix([[i_obj, 0, 0],[0, i_obj, 0],[0,0, i_obj]])
        #Object to ee vectors
        self.p1o_in_e1 = np.array([[-0.045],[0],[0]])
        self.p2o_in_e2 = np.array([[-0.045],[0],[0]])
        #Load share coefficients
        self.c1 = 0.5
        self.c2 = 0.5
        #Robots offsets
        self.pose1 = False
        self.pose2 = False
        self.vel1 = False
        self.vel2 = False
        self.first_iter = False
        self.x_off = 0.603
        self.ees_y_off = 0
        self.omega_off1 = 0
        self.omega_off2 = 0

        #Control coefficients matrices
        #e_v weight in input computation
        self.Kv = np.matrix([[3.5, 0, 0],  [0, 0.5, 0], [0, 0, 0.3]])
        #position error weight in v_o^r
        self.K_ref = np.matrix([[50, 0, 0],[0, 50, 0], [0, 0, 15]])
        #derivative of position error weight in dot{v_o^r}
        self.K_ref_dot = np.matrix([[10, 0, 0],  [0, 10, 0], [0, 0, 7]])
        #Internal forces regulation
        self.fd_int = np.matrix([[0.6, -0.05, -0.45, -0.6, 0.05, 0.45]]).T
        
        #ROS SETUP
        #initialize pose, velocity listeners and torques publisher
        #Robot1
        self.r1_pose_sub = rospy.Subscriber('/windowx_3links_r1/joints_poses', Float32MultiArray, self._r1_pose_callback, queue_size=1)
        self.r1_vel_sub = rospy.Subscriber('/windowx_3links_r1/joints_vels', Float32MultiArray, self._r1_vel_callback, queue_size=1)
        self.r1_torque_pub = rospy.Publisher('/windowx_3links_r1/torques', Float32MultiArray, queue_size=1)
        #Robot2
        self.r2_pose_sub = rospy.Subscriber('/windowx_3links_r2/joints_poses', Float32MultiArray, self._r2_pose_callback, queue_size=1)
        self.r2_vel_sub = rospy.Subscriber('/windowx_3links_r2/joints_vels', Float32MultiArray, self._r2_vel_callback, queue_size=1)
        self.r2_torque_pub = rospy.Publisher('/windowx_3links_r2/torques', Float32MultiArray, queue_size=1)
        #Trajectory listener
        self.target_sub = rospy.Subscriber('/object/target_conf', TargetConfiguration, self._target_callback, queue_size=1)
        self.errors_pub = rospy.Publisher('/errors', Float32MultiArray, queue_size=1)
        #Publishing rate
        rate = 120
        self.period = 1.0/rate
        self.pub_rate = rospy.Rate(rate)

        #Initialize torque message
        self.torques1 = Float32MultiArray()
        self.torques2 = Float32MultiArray()
        self.torques_layout = MultiArrayDimension('control_torques', 6, 0)
        self.torques1.layout.dim = [self.torques_layout]
        self.torques1.layout.data_offset = 0
        self.torques2.layout.dim = [self.torques_layout]
        self.torques2.layout.data_offset = 0
        #Initiaze signals check message
        self.errors = Float32MultiArray()
        self.errors_layout = MultiArrayDimension('errors', 6, 0)
        self.errors.layout.dim = [self.errors_layout]
        self.errors.layout.data_offset = 0

        #Initialize signals
        #Initial object's desired position, vel and acc
        self.target_pose = np.array([[0.301,0.11,0.0]]).T
        self.target_vel = np.array([[0,0.0,0.0]]).T
        self.target_acc = np.array([[0.0,0.0,0.0]]).T
        #Robot1
        self.r1_joints_poses = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        self.r1_joints_vels =  [0.0, 0.0, 0.0, 0.0, 0.0]
        self.r1_close_gripper = 1
        #Robot2
        self.r2_joints_poses = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        self.r2_joints_vels =  [0.0, 0.0, 0.0, 0.0, 0.0]
        self.r2_close_gripper = 1
        #Obj
        self.obj_pose1 = [0.0, 0.0, 0.0]
        self.obj_vel1 =  [0.0, 0.0, 0.0]
        self.obj_pose2 = [0.0, 0.0, 0.0]
        self.obj_vel2 =  [0.0, 0.0, 0.0]

        #Servo's frictions
        self.Fs = np.matrix([[0.0843,0,0],[0,0.0843,0],[0,0, 0.0078]])
        self.Fv = np.matrix([[0.0347,0,0],[0,0.0347,0],[0,0, 0.0362]])

        #Identity matrix 6x6
        self.I = np.matrix([[1,0,0,0,0,0],[0,1,0,0,0,0],[0,0,1,0,0,0],[0,0,0,1,0,0],[0,0,0,0,1,0],[0,0,0,0,0,1]])

        #Security signal services
        print("\nChecking security-stop service availability ... ...")
        rospy.wait_for_service('/windowx_3links_r1/security_stop')
        print("r1: security-stop ok ...")
        rospy.wait_for_service('/windowx_3links_r2/security_stop')
        print("r2: security-stop ok.")
        self.r1_sec_stop = rospy.ServiceProxy('/windowx_3links_r1/security_stop', SecurityStop)
        self.r2_sec_stop = rospy.ServiceProxy('/windowx_3links_r2/security_stop', SecurityStop)

        print("\nWindowX controller node created")
        print("\nWaiting for target position, velocity and acceleration...")
        self.compute_torques()

    #SENSING CALLBACKS
    def _r1_pose_callback(self, msg):
        """
        ROS callback to get the joint poses
        """
        self.r1_joints_poses = msg.data
        if self.first_iter:
            self.pose1 = True

    def _r2_pose_callback(self, msg):
        """
        ROS callback to get the joint poses
        """
        self.r2_joints_poses = msg.data
        if self.first_iter:
            self.pose2 = True

    def _r1_vel_callback(self, msg):
        """
        ROS callback to get the joint velocities
        """
        self.r1_joints_vels = msg.data
        if self.first_iter:
            self.vel1 = True

    def _r2_vel_callback(self, msg):
        """
        ROS callback to get the joint velocities
        """
        self.r2_joints_vels = msg.data
        if self.first_iter:
            self.vel2 = True

    def _target_callback(self, msg):
        """
        ROS callback to get the target configuration
        """
        self.target_pose = np.asarray(msg.pos)[np.newaxis].T
        self.target_vel = np.asarray(msg.vel)[np.newaxis].T
        self.target_acc = np.asarray(msg.acc)[np.newaxis].T

    #CONTROLLER
    def compute_torques(self):
        """
        Compute and pubblish torques values for 2nd 3rd and 4th joints
        """

        while not rospy.is_shutdown():
            #Store joints state and desired position for the object
            r1_array_vels = np.asarray(self.r1_joints_vels)[np.newaxis].T
            r1_array_poses = np.asarray(self.r1_joints_poses)[np.newaxis].T
            r2_array_vels = np.asarray(self.r2_joints_vels)[np.newaxis].T
            r2_array_poses = np.asarray(self.r2_joints_poses)[np.newaxis].T
            obj_target_pose = self.target_pose
            obj_target_vel = self.target_vel
            obj_target_acc = self.target_acc

            #Compute ee position from joints_poses
            r1_x_e = np.array([[L1_X*cos(r1_array_poses[1]) - L1_Y*sin(r1_array_poses[1]) + L2*cos(r1_array_poses[1]+r1_array_poses[2]) + L3*cos(r1_array_poses[1]+r1_array_poses[2]+r1_array_poses[3])],\
                            [L1_X*sin(r1_array_poses[1]) + L1_Y*cos(r1_array_poses[1]) + L2*sin(r1_array_poses[1]+r1_array_poses[2]) + L3*sin(r1_array_poses[1]+r1_array_poses[2]+r1_array_poses[3])],\
                            [r1_array_poses[1] + r1_array_poses[2] + r1_array_poses[3]]])
            # Compute ee velocities from joints_vels
            r1_J_e = np.matrix([[ 0.047766999999999996961985715415722*cos(r1_array_poses[1]) - 0.14203*sin(r1_array_poses[1] + r1_array_poses[2]) - 0.16036*sin(r1_array_poses[1] + r1_array_poses[2] + r1_array_poses[3]) - 0.14192399999999999460342792190204*sin(r1_array_poses[1]),\
                             - 0.16036*sin(r1_array_poses[1] + r1_array_poses[2] + r1_array_poses[3]) - 0.14203*sin(r1_array_poses[1] + r1_array_poses[2]), -0.16036*sin(r1_array_poses[1] + r1_array_poses[2] + r1_array_poses[3])],\
                            [ 0.16036*cos(r1_array_poses[1] + r1_array_poses[2] + r1_array_poses[3]) + 0.14203*cos(r1_array_poses[1] + r1_array_poses[2]) + 0.14192399999999999460342792190204*cos(r1_array_poses[1]) + 0.047766999999999996961985715415722*sin(r1_array_poses[1]),\
                              0.16036*cos(r1_array_poses[1] + r1_array_poses[2] + r1_array_poses[3]) + 0.14203*cos(r1_array_poses[1] + r1_array_poses[2]),  0.16036*cos(r1_array_poses[1] + r1_array_poses[2] + r1_array_poses[3])],\
                            [1.0,1.0,1.0]])
            r1_v_e = np.dot(r1_J_e, r1_array_vels[1:4])
            # Compute ee position from joints_poses
            r2_x_e = np.array([[L1_X*cos(r2_array_poses[1]) - L1_Y*sin(r2_array_poses[1]) + L2*cos(r2_array_poses[1]+r2_array_poses[2]) + L3*cos(r2_array_poses[1]+r2_array_poses[2]+r2_array_poses[3])],\
                            [L1_X*sin(r2_array_poses[1]) + L1_Y*cos(r2_array_poses[1]) + L2*sin(r2_array_poses[1]+r2_array_poses[2]) + L3*sin(r2_array_poses[1]+r2_array_poses[2]+r2_array_poses[3])],\
                            [r2_array_poses[1] + r2_array_poses[2] + r2_array_poses[3]]])
            #Compute ee velocities from joints_vels
            r2_J_e = np.matrix([[ 0.16036*sin(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14203*sin(r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.047766999999999996961985715415722*cos(r2_array_poses[1,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[1,0]), 0.16036*sin(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14203*sin(r2_array_poses[1,0] + r2_array_poses[2,0]), 0.16036*sin(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0])],\
                                [ 0.16036*cos(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14203*cos(r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.14192399999999999460342792190204*cos(r2_array_poses[1,0]) + 0.047766999999999996961985715415722*sin(r2_array_poses[1,0]), 0.16036*cos(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14203*cos(r2_array_poses[1,0] + r2_array_poses[2,0]), 0.16036*cos(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0])],\
                                [-1.0,-1.0,-1.0]])
            #Apply rototraslation for agent 2
            r2_v_e = np.dot(r2_J_e, r2_array_vels[1:4])
            r2_x_e = np.array([[self.x_off - r2_x_e[0,0]],[r2_x_e[1,0]],[-r2_x_e[2,0]]])
            #Invert the Jacobians
            r1_J_e_inv = inv(r1_J_e)
            r2_J_e_inv = inv(r2_J_e)

            #Uncomment to setup offsets or do initialization stuff
            # if self.first_iter and self.pose1 and self.pose2 and self.vel1 and self.vel2:
            #     # self.ees_y_off = r1_x_e[1,0] - r2_x_e[1,0]
            #     # self.omega_off1 = r1_x_e[2,0]
            #     # self.omega_off2 = r2_x_e[2,0]
            #     self.first_iter = False

            #Compute obj position and vel from ee positions and vel
            #ee positions
            r1_p_ee = np.array([[r1_x_e[0,0]],[r1_x_e[1,0]],[0]])
            r2_p_ee = np.array([[r2_x_e[0,0]],[r2_x_e[1,0]],[0]])
            #Rotation matrice
            Re1  = np.matrix([[cos(r1_x_e[2,0] - self.omega_off1), -sin(r1_x_e[2,0] - self.omega_off1), 0], [sin(r1_x_e[2,0] - self.omega_off1), cos(r1_x_e[2,0] - self.omega_off1), 0], [0,0,1]])
            Re2_y = np.matrix([[-1, 0, 0],[0,1,0],[0,0,-1]]) #pi rotation about y axis
            Re2_z  = np.matrix([[cos(r2_x_e[2,0] - self.omega_off2), -sin(r2_x_e[2,0] - self.omega_off2), 0], [sin(r2_x_e[2,0] - self.omega_off2), cos(r2_x_e[2,0] - self.omega_off2), 0], [0,0,1]])
            Re2 = np.dot(Re2_z, Re2_y)
            #Object poses wrt the 2 agents
            self.obj_pose1 = r1_p_ee - np.dot(Re1, self.p1o_in_e1) 
            self.obj_pose1[2,0] = r1_x_e[2,0] - self.omega_off1
            obj_array_pose1 = self.obj_pose1
            self.obj_pose2 = r2_p_ee - np.dot(Re2, self.p2o_in_e2)
            self.obj_pose2[2,0] = (r2_x_e[2,0] - self.omega_off2)
            obj_array_pose2 = self.obj_pose2
            p_o1 = obj_array_pose1[0:2] - r1_x_e[0:2]
            p_o2 = obj_array_pose2[0:2] - r2_x_e[0:2]
            p_1o = -p_o1
            p_2o = -p_o2
            #Agent to objectjacobians
            J_1o = np.matrix([[1,0,-p_o1[1,0]],[0,1,p_o1[0,0]],[0,0,1]])
            J_2o = np.matrix([[1,0,-p_o2[1,0]],[0,1,p_o2[0,0]],[0,0,1]])
            #Object velocity
            self.obj_vel1 = np.dot(J_1o, r1_v_e)
            obj_array_vel1 = self.obj_vel1            
            self.obj_vel2 = np.dot(J_2o, r2_v_e) 
            obj_array_vel2 = self.obj_vel2
            #Object-EE jacobians and its derivative
            p_o1_dot = obj_array_pose2[0:2] - r1_v_e[0:2]
            p_o2_dot = obj_array_vel2[0:2] - r2_v_e[0:2]
            J_o1 = np.matrix([[1,0,p_o1[1,0]],[0,1,-p_o1[0,0]],[0,0,1]])
            J_o2 = np.matrix([[1,0,p_o2[1,0]],[0,1,-p_o2[0,0]],[0,0,1]])
            J_o1_dot = np.matrix([[1,0,p_o1_dot[1,0]],[0,1,-p_o1_dot[0,0]],[0,0,1]])
            J_o2_dot = np.matrix([[1,0,p_o2_dot[1,0]],[0,1,-p_o2_dot[0,0]],[0,0,1]])

            #GRASP MATRIX
            #Real grasp matrix
            G = np.matrix([[1,0,-p_1o[1,0]],[0,1,p_1o[0,0]],[0,0,1],[1,0,-p_2o[1,0]],[0,1,p_2o[0,0]],[0,0,1]])
            G_star = np.matrix([[1,0,p_1o[1,0],1,0,p_2o[1,0]],[0,1,-p_1o[0,0],0,1,-p_2o[0,0]],[0,0,1,0,0,1]]).T
            #Grasp matrices computed offline by the 2 agents
            G1 = np.matrix([[1,0,-p_1o[1,0]],[0,1,p_1o[0,0]],[0,0,1],[1,0,p_1o[1,0]],[0,1,-p_1o[0,0]],[0,0,1]])
            G2 = np.matrix([[1,0,p_2o[1,0]],[0,1,-p_2o[0,0]],[0,0,1],[1,0,-p_2o[1,0]],[0,1,p_2o[0,0]],[0,0,1]])
            G1_star = np.matrix([[1,0,p_1o[1,0],1,0,-p_1o[1,0]],[0,1,-p_1o[0,0],0,1,p_1o[0,0]],[0,0,1,0,0,1]]).T
            G2_star = np.matrix([[1,0,-p_2o[1,0],1,0,p_2o[1,0]],[0,1,p_2o[0,0],0,1,-p_2o[0,0]],[0,0,1,0,0,1]]).T
            #Agent to object jiacobians computed from the decentralize perspective of each agent
            J_2o_1 = np.matrix([[1,0,-p_1o[1,0]],[0,1,p_1o[0,0]],[0,0,1]])
            J_1o_2 = np.matrix([[1,0,-p_2o[1,0]],[0,1,p_2o[0,0]],[0,0,1]])

            #Robot 1 and 2 dynamics
            M1 =np.matrix([[(49.572386364462757849962123474612*(0.0001361769666249375655142419592553*cos(2.0*r1_array_poses[1,0]) - 0.0000010395654923422999338829146587226*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.00010430570934130451406174333622838*cos(2.0*r1_array_poses[2,0]) + 0.00010337561876074369688845282770292*sin(2.0*r1_array_poses[1,0]) + 0.000079181285283975840220601603442762*sin(2.0*r1_array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(r1_array_poses[2,0]) + 0.00040313592533045451009466604148129*cos(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(r1_array_poses[2,0]) + 0.00070506131454818413163718096909733))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576),(49.572386364462757849962123474612*(0.0000010395654923422999338829146587226*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.0000030887284722755998825530154849872*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.00010337561876074369688845282770292*cos(2.0*r1_array_poses[1,0]) + 0.0001361769666249375655142419592553*sin(2.0*r1_array_poses[1,0]) + 0.00040313592533045451009466604148129*sin(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0])))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576), -(24.786193182231378924981061737306*(0.00012929375397198337047756129282388*sin(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000088378184731947519431226043473656*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000033154628448945718466064590900881*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.00021336040564880879742640358132956*sin(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000043674676735949976011727681172359*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.00000016670472235201121739746419467276*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000024953154947055056846529683193203*sin(r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.00000049530849781411519716620156317255*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000016670472235201121739746419467276*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00000015087736493725280842073467806088*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.00000033340944470402243479492838934553*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.00000049530849781411519716620156317255*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000019875113818734438265101740694115*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.0000009906169956282303943324031263451*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.0000088378184731947519431226043473656*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576)],\
                          [(49.572386364462757849962123474612*(0.0000010395654923422999338829146587226*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.0000030887284722755998825530154849872*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.00010337561876074369688845282770292*cos(2.0*r1_array_poses[1,0]) + 0.0001361769666249375655142419592553*sin(2.0*r1_array_poses[1,0]) + 0.00040313592533045451009466604148129*sin(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0])))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576),(49.572386364462757849962123474612*(0.0000030887284722755998825530154849872*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.0001361769666249375655142419592553*cos(2.0*r1_array_poses[1,0]) - 0.00010430570934130451406174333622838*cos(2.0*r1_array_poses[2,0]) - 0.00010337561876074369688845282770292*sin(2.0*r1_array_poses[1,0]) + 0.000079181285283975840220601603442762*sin(2.0*r1_array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(r1_array_poses[2,0]) - 0.00040313592533045451009466604148129*cos(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(r1_array_poses[2,0]) + 0.00070506131454818413163718096909733))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576),  (24.786193182231378924981061737306*(0.00012929375397198337047756129282388*cos(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.00021336040564880879742640358132956*cos(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000043674676735949976011727681172359*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000088378184731947519431226043473656*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000033154628448945718466064590900881*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000024953154947055056846529683193203*cos(r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.00000049530849781411519716620156317255*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000016670472235201121739746419467276*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000049530849781411519716620156317255*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000019875113818734438265101740694115*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.0000009906169956282303943324031263451*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.00000016670472235201121739746419467276*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000015087736493725280842073467806088*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.00000033340944470402243479492838934553*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000088378184731947519431226043473656*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576)],\
                          [ -(24.786193182231378924981061737306*(0.00012929375397198337047756129282388*sin(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000088378184731947519431226043473656*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000033154628448945718466064590900881*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.00021336040564880879742640358132956*sin(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000043674676735949976011727681172359*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.00000016670472235201121739746419467276*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000024953154947055056846529683193203*sin(r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.00000049530849781411519716620156317255*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000016670472235201121739746419467276*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00000015087736493725280842073467806088*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.00000033340944470402243479492838934553*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.00000049530849781411519716620156317255*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000019875113818734438265101740694115*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.0000009906169956282303943324031263451*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.0000088378184731947519431226043473656*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576), (24.786193182231378924981061737306*(0.00012929375397198337047756129282388*cos(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.00021336040564880879742640358132956*cos(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000043674676735949976011727681172359*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000088378184731947519431226043473656*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000033154628448945718466064590900881*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000024953154947055056846529683193203*cos(r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.00000049530849781411519716620156317255*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000016670472235201121739746419467276*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.00000049530849781411519716620156317255*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000019875113818734438265101740694115*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.0000009906169956282303943324031263451*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.00000016670472235201121739746419467276*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000015087736493725280842073467806088*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.00000033340944470402243479492838934553*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000088378184731947519431226043473656*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576),-(49.572386364462757849962123474612*(0.000000026732769276368518821857358257724*sin(r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.000000031871732519722545201917151377082*cos(2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000007942767070947151301757208267035*cos(r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) + 0.000000024194694241337860358349012973843*sin(2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000020028861984271396211740451538764*cos(2.0*r1_array_poses[2,0]) + 0.000010366773193473626644890864458619*cos(2.0*r1_array_poses[3,0]) - 0.0000015204450884856399668441155638056*sin(2.0*r1_array_poses[2,0]) + 0.00000007942767070947151301757208267035*cos(r1_array_poses[2,0]) + 0.00000004001487927309748915909499996862*cos(r1_array_poses[3,0]) + 0.0000035018355806884690766203254763997*cos(2.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.000000026732769276368518821857358257724*sin(r1_array_poses[2,0]) - 0.0000026583381090364677066090588984327*sin(2.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.000017277937413586096424197894997158))/(0.013558567415999998622109604440311*sin(2.0*r1_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r1_array_poses[2,0]) + 0.022424108064999998177960152112576)]])

            C1 = np.matrix([[-(12.393096591115689462490530868653*(0.000032949940073977341546754725149535*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.00000073203243685793528826971806258359*r1_array_vels[2,0] + 0.00013869404912582092959861518971449*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000011089877593033423757847637491665*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000046679903642746034319030001569579*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000014388836629933194457940340309125*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000014388836629933194457940340309125*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.00000038870777482652758327933797037624*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0]) - 0.00000058306166223979137491900695556436*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0]) - 0.00000019435388741326379163966898518812*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0]) - 0.00000044261787880556571061892601208781*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0]) + 0.00000014753929293518857020630867069594*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0]) + 0.00016295877211844301176698376951963*r1_array_vels[2,0]*cos(r1_array_poses[2,0]) + 0.00000048802162457195685884647870838906*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.00000024401081228597842942323935419453*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.000054846619794972429920141577098329*r1_array_vels[2,0]*sin(r1_array_poses[2,0]) - 0.000057214663066599423715123304954675*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0]) + 0.000019256593745259819358959213020415*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0])),(12.393096591115689462490530868653*(0.000011089877593033423757847637491665*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000046679903642746034319030001569579*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.000032949940073977341546754725149535*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.00013869404912582092959861518971449*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.000014388836629933194457940340309125*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.000014388836629933194457940340309125*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0]) - 0.00000029507858587037714041261734139187*r1_array_vels[1,0]*cos(2.0*r1_array_poses[2,0]) - 0.00000044261787880556571061892601208781*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0]) - 0.00000014753929293518857020630867069594*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0]) + 0.00000038870777482652758327933797037624*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0]) - 0.00000038870777482652758327933797037624*r1_array_vels[1,0]*sin(2.0*r1_array_poses[2,0]) + 0.00000058306166223979137491900695556436*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0]) - 0.00000019435388741326379163966898518812*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0]) + 0.000054846619794972429920141577098329*r1_array_vels[1,0]*cos(r1_array_poses[2,0]) + 0.00003851318749051963871791842604083*r1_array_vels[2,0]*cos(r1_array_poses[2,0]) + 0.00016295877211844301176698376951963*r1_array_vels[1,0]*sin(r1_array_poses[2,0]) + 0.00011442932613319884743024660990935*r1_array_vels[2,0]*sin(r1_array_poses[2,0]) - 0.00000048802162457195685884647870838906*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.00000024401081228597842942323935419453*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.000019256593745259819358959213020415*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0]) + 0.000057214663066599423715123304954675*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0])), -(6.1965482955578447312452654343266*(0.0000018104058248269486959230379712567*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000047318802030173678236567316865601*r1_array_vels[2,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[3,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000094637604060347356473134633731202*r1_array_vels[3,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[3,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00000023477744314907700565386397703181*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r1_array_vels[2,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00000015651829543271800376924265135454*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r1_array_vels[3,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00000012466635754236392650934927385907*r1_array_vels[3,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r1_array_vels[3,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000013509006974121133933904142467225*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000010889777769779084336715637963644*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000062233402715820258713648653506498*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000040137590926689301431357553545922*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000032355408968495547238318382630818*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000040814009265224237900836641397514*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000010889777769779084336715637963644*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011414433154663828459182407807069*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.0000035567455416376796676168942963269*r1_array_vels[3,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.0000062233402715820258713648653506498*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000012126546467137741302549481014413*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000032355408968495547238318382630818*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000033914250655107275559992688195273*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.000010567704780526012980875175449959*r1_array_vels[3,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000067916457716342943401243131998673*r1_array_vels[3,0]*cos(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000018349886738719767173914346365063*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.000018349886738719767173914346365063*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000046147876839521741265506259439426*r1_array_vels[3,0]*sin(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000062333178771181963254674636929534*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000023477744314907700565386397703181*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0]))],\
                           [(12.393096591115689462490530868653*(0.000011089877593033423757847637491665*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000046679903642746034319030001569579*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.000032949940073977341546754725149535*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.00013869404912582092959861518971449*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.000014388836629933194457940340309125*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.000014388836629933194457940340309125*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0]) + 0.00000029507858587037714041261734139187*r1_array_vels[1,0]*cos(2.0*r1_array_poses[2,0]) - 0.00000044261787880556571061892601208781*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0]) + 0.00000014753929293518857020630867069594*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0]) + 0.00000038870777482652758327933797037624*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0]) + 0.00000038870777482652758327933797037624*r1_array_vels[1,0]*sin(2.0*r1_array_poses[2,0]) + 0.00000058306166223979137491900695556436*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0]) + 0.00000019435388741326379163966898518812*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0]) - 0.000054846619794972429920141577098329*r1_array_vels[1,0]*cos(r1_array_poses[2,0]) - 0.00003851318749051963871791842604083*r1_array_vels[2,0]*cos(r1_array_poses[2,0]) - 0.00016295877211844301176698376951963*r1_array_vels[1,0]*sin(r1_array_poses[2,0]) - 0.00011442932613319884743024660990935*r1_array_vels[2,0]*sin(r1_array_poses[2,0]) - 0.00000048802162457195685884647870838906*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.00000024401081228597842942323935419453*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.000019256593745259819358959213020415*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0]) + 0.000057214663066599423715123304954675*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0])),(12.393096591115689462490530868653*(0.00000073203243685793528826971806258359*r1_array_vels[2,0] + 0.000032949940073977341546754725149535*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.00013869404912582092959861518971449*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000011089877593033423757847637491665*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000046679903642746034319030001569579*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.000014388836629933194457940340309125*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000014388836629933194457940340309125*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) + 0.000021176246481773180157534027188411*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0] - 1.0*r1_array_poses[2,0]) - 0.00000038870777482652758327933797037624*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0]) - 0.00000058306166223979137491900695556436*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0]) + 0.00000019435388741326379163966898518812*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0]) - 0.00000044261787880556571061892601208781*r1_array_vels[2,0]*sin(2.0*r1_array_poses[1,0]) - 0.00000014753929293518857020630867069594*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0]) - 0.00016295877211844301176698376951963*r1_array_vels[2,0]*cos(r1_array_poses[2,0]) + 0.00000048802162457195685884647870838906*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.00000024401081228597842942323935419453*r1_array_vels[2,0]*cos(2.0*r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.000054846619794972429920141577098329*r1_array_vels[2,0]*sin(r1_array_poses[2,0]) - 0.000057214663066599423715123304954675*r1_array_vels[1,0]*cos(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0]) + 0.000019256593745259819358959213020415*r1_array_vels[1,0]*sin(2.0*r1_array_poses[1,0] + 3.0*r1_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0])), -(6.1965482955578447312452654343266*(0.0000012301346071758212453528510987523*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000023477744314907700565386397703181*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.000000062333178771181963254674636929534*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r1_array_vels[2,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000015651829543271800376924265135454*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.000000062333178771181963254674636929534*r1_array_vels[3,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00000012466635754236392650934927385907*r1_array_vels[3,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r1_array_vels[3,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[2,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[3,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000094637604060347356473134633731202*r1_array_vels[3,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[3,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000062233402715820258713648653506498*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000040137590926689301431357553545922*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000032355408968495547238318382630818*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000013509006974121133933904142467225*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000010889777769779084336715637963644*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000062233402715820258713648653506498*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000012126546467137741302549481014413*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000032355408968495547238318382630818*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000033914250655107275559992688195273*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.000010567704780526012980875175449959*r1_array_vels[3,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000040814009265224237900836641397514*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000010889777769779084336715637963644*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 4.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000011414433154663828459182407807069*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.0000035567455416376796676168942963269*r1_array_vels[3,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.000018349886738719767173914346365063*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.000018349886738719767173914346365063*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000046147876839521741265506259439426*r1_array_vels[3,0]*cos(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r1_array_vels[3,0]*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.0000067916457716342943401243131998673*r1_array_vels[3,0]*sin(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[3,0]*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00000023477744314907700565386397703181*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0]))],\
                           [ -(12.393096591115689462490530868653*(0.0000000236594010150868391182836584328*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000047318802030173678236567316865601*r1_array_vels[1,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000070978203045260517354850975298401*r1_array_vels[2,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000005959686761779894122900711012458*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.000000005959686761779894122900711012458*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.00000007825914771635900188462132567727*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.000000031166589385590981627337318464767*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r1_array_vels[1,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000039129573858179500942310662838635*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.000000031166589385590981627337318464767*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000093499768156772944882011955394301*r1_array_vels[2,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000017707257813529208766126897548914*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.000000017707257813529208766126897548914*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.000004397601975160889430996951651744*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.0000074855893481507540633996510516977*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000013066034348456760683476758640084*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000022240977717816644270433931822616*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000004397601975160889430996951651744*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000013096146021710247985942522517903*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) + 0.0000017783727708188398338084471481634*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) + 0.0000074855893481507540633996510516977*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.000013066034348456760683476758640084*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000038910909790968770965195854575523*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000010500298722571454324661254081789*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) - 0.0000052838523902630064904375877249794*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.000000010500298722571454324661254081789*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) - 0.000022240977717816644270433931822616*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.000000011919373523559788245801422024916*r1_array_vels[1,0]*cos(r1_array_poses[1,0]) + 0.0000030879873729898646324026993999537*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.0000033958228858171471700621565999336*r1_array_vels[1,0]*cos(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000033958228858171471700621565999336*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000035414515627058417532253795097828*r1_array_vels[1,0]*sin(r1_array_poses[1,0]) + 0.0000091749433693598835869571731825317*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r1_array_vels[1,0]*sin(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000031166589385590981627337318464767*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000001173887215745385028269319885159*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0])), -(12.393096591115689462490530868653*(0.00000007825914771635900188462132567727*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.000000031166589385590981627337318464767*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r1_array_vels[1,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000000039129573858179500942310662838635*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.000000031166589385590981627337318464767*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000093499768156772944882011955394301*r1_array_vels[2,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000000017707257813529208766126897548914*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.000000017707257813529208766126897548914*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) + 0.0000000236594010150868391182836584328*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r1_array_vels[1,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000070978203045260517354850975298401*r1_array_vels[2,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000000005959686761779894122900711012458*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.000000005959686761779894122900711012458*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0]) - 0.000013066034348456760683476758640084*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000022240977717816644270433931822616*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000004397601975160889430996951651744*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.0000074855893481507540633996510516977*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.000013066034348456760683476758640084*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000038910909790968770965195854575523*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000000010500298722571454324661254081789*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) + 0.0000052838523902630064904375877249794*r1_array_vels[1,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.000000010500298722571454324661254081789*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) + 0.000022240977717816644270433931822616*r1_array_vels[2,0]*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.000004397601975160889430996951651744*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000013096146021710247985942522517903*r1_array_vels[2,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) + 0.0000017783727708188398338084471481634*r1_array_vels[1,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 2.0*r1_array_poses[2,0]) + 0.0000074855893481507540633996510516977*r1_array_vels[2,0]*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.000000035414515627058417532253795097828*r1_array_vels[1,0]*cos(r1_array_poses[1,0]) - 0.0000091749433693598835869571731825317*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r1_array_vels[1,0]*cos(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.000000031166589385590981627337318464767*r1_array_vels[1,0]*cos(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.000000011919373523559788245801422024916*r1_array_vels[1,0]*sin(r1_array_poses[1,0]) + 0.0000030879873729898646324026993999537*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000033958228858171471700621565999336*r1_array_vels[1,0]*sin(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.0000033958228858171471700621565999336*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0] - 1.0*r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r1_array_vels[1,0]*sin(r1_array_poses[1,0] + 3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000001173887215745385028269319885159*r1_array_vels[2,0]*cos(r1_array_poses[1,0] + r1_array_poses[2,0] + r1_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0])),-(12.393096591115689462490530868653*(0.00000084731856930257572080657156757769*r1_array_vels[3,0]*cos(r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.000002719244617526501354400213739497*r1_array_vels[2,0]*cos(r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.00000001882445539169299431332681367841*r1_array_vels[2,0] + 0.00000091520925034094576585724545797076*r1_array_vels[2,0]*sin(r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.00000028517985752850915574952258467949*r1_array_vels[3,0]*sin(r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.0000000016838279031515584155026787045557*r1_array_vels[3,0]*cos(3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000000049978742738733698137598123890101*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0]) + 0.00000001882445539169299431332681367841*r1_array_vels[2,0]*cos(2.0*r1_array_poses[3,0]) + 0.000000012549636927795329542217875785607*r1_array_vels[3,0]*cos(2.0*r1_array_poses[3,0]) + 0.0000000024781124163886105413815559184205*r1_array_vels[3,0]*sin(3.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000000037940215467793255210079674662839*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0]) + 0.0000000056790717259550878354722185818877*r1_array_vels[2,0]*cos(r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.0000000056790717259550878354722185818877*r1_array_vels[3,0]*cos(r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000000019113907382380476430967160359155*r1_array_vels[2,0]*sin(r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000000019113907382380476430967160359155*r1_array_vels[3,0]*sin(r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.0000000056790717259550878354722185818877*r1_array_vels[2,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000014712939187105509320044522915508*r1_array_vels[2,0]*cos(r1_array_poses[2,0] - 2.0*r1_array_poses[3,0]) - 0.0000000028395358629775439177361092909438*r1_array_vels[3,0]*cos(r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) - 0.0000014712939187105509320044522915508*r1_array_vels[3,0]*cos(r1_array_poses[2,0] - 2.0*r1_array_poses[3,0]) + 0.0000000019113907382380476430967160359155*r1_array_vels[2,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.00000049518965513265469245209687577658*r1_array_vels[2,0]*sin(r1_array_poses[2,0] - 2.0*r1_array_poses[3,0]) + 0.00000000095569536911902382154835801795777*r1_array_vels[3,0]*sin(r1_array_poses[2,0] - 1.0*r1_array_poses[3,0]) + 0.00000049518965513265469245209687577658*r1_array_vels[3,0]*sin(r1_array_poses[2,0] - 2.0*r1_array_poses[3,0]) + 0.0000041905385362370522864046660310477*r1_array_vels[2,0]*cos(r1_array_poses[2,0]) + 0.0000000049978742738733698137598123890101*r1_array_vels[2,0]*cos(2.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.0000000099957485477467396275196247780201*r1_array_vels[3,0]*cos(2.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.0000014103989054736004583093423337473*r1_array_vels[2,0]*sin(r1_array_poses[2,0]) - 0.0000000037940215467793255210079674662839*r1_array_vels[2,0]*sin(2.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) + 0.0000000075880430935586510420159349325677*r1_array_vels[3,0]*sin(2.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) + 0.00000037001367649928532146682918818532*r1_array_vels[3,0]*cos(3.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0]) - 0.00000054455415796963772019116743236536*r1_array_vels[3,0]*sin(3.0*r1_array_poses[2,0] + 2.0*r1_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r1_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r1_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r1_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r1_array_poses[2,0])**2*sin(r1_array_poses[2,0]))]])

            g1 = np.matrix([[(34.534957403365486164894740547772*(0.004222989068339999884482663308205*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.0011702998592249999407335799905816*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.004222989068339999884482663308205*cos(r1_array_poses[2,0]) - 0.0011702998592249999407335799905816*sin(r1_array_poses[2,0])))/(0.047766999999999996961985715415722*cos(r1_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r1_array_poses[2,0]))],\
                           [(34.534957403365486164894740547772*(0.004222989068339999884482663308205*sin(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) - 0.0011702998592249999407335799905816*cos(2.0*r1_array_poses[1,0] + r1_array_poses[2,0]) + 0.0050984367780149996605704280017157*cos(r1_array_poses[2,0]) + 0.015894161720219999350575154704046*sin(r1_array_poses[2,0])))/(0.047766999999999996961985715415722*cos(r1_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r1_array_poses[2,0]))],\
                           [-(69.069914806730972329789481095543*(0.00020344438477991318706079621747573*cos(r1_array_poses[1,0] + r1_array_poses[3,0]) - 0.00066426872218756557474159382126189*sin(r1_array_poses[1,0] + r1_array_poses[3,0]) + 0.0001096097420672526918127777738309*cos(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) - 0.000093834642712660495248018443644833*cos(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0]) + 0.00032566945868806438400377387721001*sin(r1_array_poses[1,0] + 2.0*r1_array_poses[2,0] + r1_array_poses[3,0]) + 0.00033859926349950119073781994405188*sin(r1_array_poses[1,0] - 1.0*r1_array_poses[3,0])))/(0.047766999999999996961985715415722*cos(r1_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r1_array_poses[2,0]))]])


            M2 = np.matrix([[(49.572386364462757849962123474612*(0.0001361769666249375655142419592553*cos(2.0*r2_array_poses[1,0]) - 0.0000010395654923422999338829146587226*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.00010430570934130451406174333622838*cos(2.0*r2_array_poses[2,0]) + 0.00010337561876074369688845282770292*sin(2.0*r2_array_poses[1,0]) + 0.000079181285283975840220601603442762*sin(2.0*r2_array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(r2_array_poses[2,0]) + 0.00040313592533045451009466604148129*cos(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(r2_array_poses[2,0]) + 0.00070506131454818413163718096909733))/(0.013558567415999998622109604440311*sin(2.0*r2_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r2_array_poses[2,0]) + 0.022424108064999998177960152112576),\
                            -(49.572386364462757849962123474612*(0.0000010395654923422999338829146587226*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.0000030887284722755998825530154849872*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.00010337561876074369688845282770292*cos(2.0*r2_array_poses[1,0]) + 0.0001361769666249375655142419592553*sin(2.0*r2_array_poses[1,0]) + 0.00040313592533045451009466604148129*sin(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0])))/(0.013558567415999998622109604440311*sin(2.0*r2_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r2_array_poses[2,0]) + 0.022424108064999998177960152112576),\
                            (3.9747139387026239244099630601944*(0.047766999999999996961985715415722*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14203*sin(r2_array_poses[3,0]))*(0.00027895664328787183010421376151069*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.00082882832587325816208455827647565*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.0000217632569*cos(r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.00028445570585160958918374820569852*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000095738534014076793910962925870933*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.00028445570585160958918374820569852*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000095738534014076793910962925870933*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0030041117825278514553436796373526*cos(r2_array_poses[1,0]) + 0.0010110862681153848312989132246105*sin(r2_array_poses[1,0])))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))**2 - (24.786193182231378924981061737306*(0.0076599161199999995128240293240651*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.022758932639999999134605701556211*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0067843470099999995685108311604949*cos(r2_array_poses[2,0]) + 0.020157465719999999233524867747747*sin(r2_array_poses[2,0]))*(0.00028445570585160958918374820569852*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000095738534014076793910962925870933*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.00028445570585160958918374820569852*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000095738534014076793910962925870933*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000011119520030067920863664636561489*cos(r2_array_poses[1,0]) + 0.0000037424685978147061970484875263562*sin(r2_array_poses[1,0])))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))**2 + (0.16036*sin(r2_array_poses[3,0])*((cos(r2_array_poses[1,0] + r2_array_poses[2,0])*(0.0040055721446399998476906034738931*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0013481452371199999142570291610355*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.011671172651879999466092491395841*cos(r2_array_poses[2,0]) + 0.0040085638208*cos(r2_array_poses[3,0]) - 0.0039281369187899997198368480111341*sin(r2_array_poses[2,0]) + 0.042812399753418998939427354098797))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0])) - (7.0407660353446454974301203970992*(0.14203*cos(r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.14192399999999999460342792190204*cos(r2_array_poses[1,0]) + 0.047766999999999996961985715415722*sin(r2_array_poses[1,0]))*(0.0020027860723199999238453017369466*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00067407261855999995712851458051773*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0058355863259399997330462456979205*cos(r2_array_poses[2,0]) + 0.0040085638208*cos(r2_array_poses[3,0]) - 0.0019640684593949998599184240055671*sin(r2_array_poses[2,0]) + 0.01625959562072499985284632093574))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0])) + (7.0407660353446454974301203970992*(0.14192399999999999460342792190204*cos(r2_array_poses[1,0]) + 0.047766999999999996961985715415722*sin(r2_array_poses[1,0]))*(0.0020027860723199999238453017369466*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00067407261855999995712851458051773*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0020042819104*cos(r2_array_poses[3,0]) + 0.0026794854106086355903769417993171))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))],\
                            [-(49.572386364462757849962123474612*(0.0000010395654923422999338829146587226*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.0000030887284722755998825530154849872*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.00010337561876074369688845282770292*cos(2.0*r2_array_poses[1,0]) + 0.0001361769666249375655142419592553*sin(2.0*r2_array_poses[1,0]) + 0.00040313592533045451009466604148129*sin(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0])))/(0.013558567415999998622109604440311*sin(2.0*r2_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r2_array_poses[2,0]) + 0.022424108064999998177960152112576),\
                            (49.572386364462757849962123474612*(0.0000030887284722755998825530154849872*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.0001361769666249375655142419592553*cos(2.0*r2_array_poses[1,0]) - 0.00010430570934130451406174333622838*cos(2.0*r2_array_poses[2,0]) - 0.00010337561876074369688845282770292*sin(2.0*r2_array_poses[1,0]) + 0.000079181285283975840220601603442762*sin(2.0*r2_array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(r2_array_poses[2,0]) - 0.00040313592533045451009466604148129*cos(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(r2_array_poses[2,0]) + 0.00070506131454818413163718096909733))/(0.013558567415999998622109604440311*sin(2.0*r2_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r2_array_poses[2,0]) + 0.022424108064999998177960152112576),\
                             (3.9747139387026239244099630601944*(0.047766999999999996961985715415722*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.14203*sin(r2_array_poses[3,0]))*(0.00027895664328787183010421376151069*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.00082882832587325816208455827647565*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.000095738534014076793910962925870933*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000217632569*sin(r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.00028445570585160958918374820569852*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000095738534014076793910962925870933*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00028445570585160958918374820569852*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0010110862681153848312989132246105*cos(r2_array_poses[1,0]) - 0.0030041117825278514553436796373526*sin(r2_array_poses[1,0])))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))**2 + (0.16036*sin(r2_array_poses[3,0])*((7.0407660353446454974301203970992*(0.14203*sin(r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.047766999999999996961985715415722*cos(r2_array_poses[1,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[1,0]))*(0.0020027860723199999238453017369466*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00067407261855999995712851458051773*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0058355863259399997330462456979205*cos(r2_array_poses[2,0]) + 0.0040085638208*cos(r2_array_poses[3,0]) - 0.0019640684593949998599184240055671*sin(r2_array_poses[2,0]) + 0.01625959562072499985284632093574))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0])) + (7.0407660353446454974301203970992*(0.047766999999999996961985715415722*cos(r2_array_poses[1,0]) - 0.14192399999999999460342792190204*sin(r2_array_poses[1,0]))*(0.0020027860723199999238453017369466*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00067407261855999995712851458051773*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0020042819104*cos(r2_array_poses[3,0]) + 0.0026794854106086355903769417993171))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0])) - (1.0*sin(r2_array_poses[1,0] + r2_array_poses[2,0])*(0.0040055721446399998476906034738931*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0013481452371199999142570291610355*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.011671172651879999466092491395841*cos(r2_array_poses[2,0]) + 0.0040085638208*cos(r2_array_poses[3,0]) - 0.0039281369187899997198368480111341*sin(r2_array_poses[2,0]) + 0.042812399753418998939427354098797))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0])) - (24.786193182231378924981061737306*(0.0076599161199999995128240293240651*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.022758932639999999134605701556211*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0067843470099999995685108311604949*cos(r2_array_poses[2,0]) + 0.020157465719999999233524867747747*sin(r2_array_poses[2,0]))*(0.000095738534014076793910962925870933*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.00028445570585160958918374820569852*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000095738534014076793910962925870933*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00028445570585160958918374820569852*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000037424685978147061970484875263562*cos(r2_array_poses[1,0]) - 0.000011119520030067920863664636561489*sin(r2_array_poses[1,0])))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))**2],\
                            [-(24.786193182231378924981061737306*(0.00012929375397198337047756129282388*sin(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000088378184731947519431226043473656*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000033154628448945718466064590900881*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.00021336040564880879742640358132956*sin(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000043674676735949976011727681172359*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.00000016670472235201121739746419467276*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.00000024953154947055056846529683193203*sin(r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.00000049530849781411519716620156317255*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.00000016670472235201121739746419467276*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00000015087736493725280842073467806088*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.00000033340944470402243479492838934553*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.00000049530849781411519716620156317255*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000019875113818734438265101740694115*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.0000009906169956282303943324031263451*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.0000088378184731947519431226043473656*cos(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*r2_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r2_array_poses[2,0]) + 0.022424108064999998177960152112576),\
                            -(24.786193182231378924981061737306*(0.00012929375397198337047756129282388*cos(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.00021336040564880879742640358132956*cos(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000043674676735949976011727681172359*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000088378184731947519431226043473656*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000033154628448945718466064590900881*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.00000024953154947055056846529683193203*cos(r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.00000049530849781411519716620156317255*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.00000016670472235201121739746419467276*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.00000049530849781411519716620156317255*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000019875113818734438265101740694115*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.0000009906169956282303943324031263451*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.00000016670472235201121739746419467276*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000015087736493725280842073467806088*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.00000033340944470402243479492838934553*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000088378184731947519431226043473656*sin(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*r2_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r2_array_poses[2,0]) + 0.022424108064999998177960152112576),\
                            -(49.572386364462757849962123474612*(0.000000026732769276368518821857358257724*sin(r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.000000031871732519722545201917151377082*cos(2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000007942767070947151301757208267035*cos(r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) + 0.000000024194694241337860358349012973843*sin(2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000020028861984271396211740451538764*cos(2.0*r2_array_poses[2,0]) + 0.000010366773193473626644890864458619*cos(2.0*r2_array_poses[3,0]) - 0.0000015204450884856399668441155638056*sin(2.0*r2_array_poses[2,0]) + 0.00000007942767070947151301757208267035*cos(r2_array_poses[2,0]) + 0.00000004001487927309748915909499996862*cos(r2_array_poses[3,0]) + 0.0000035018355806884690766203254763997*cos(2.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.000000026732769276368518821857358257724*sin(r2_array_poses[2,0]) - 0.0000026583381090364677066090588984327*sin(2.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.000017277937413586096424197894997158))/(0.013558567415999998622109604440311*sin(2.0*r2_array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*r2_array_poses[2,0]) + 0.022424108064999998177960152112576)]])

            C2 = np.matrix([[-(12.393096591115689462490530868653*(0.000032949940073977341546754725149535*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.00000073203243685793528826971806258359*r2_array_vels[2,0] + 0.00013869404912582092959861518971449*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000011089877593033423757847637491665*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000046679903642746034319030001569579*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000014388836629933194457940340309125*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000014388836629933194457940340309125*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.00000038870777482652758327933797037624*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0]) - 0.00000058306166223979137491900695556436*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0]) - 0.00000019435388741326379163966898518812*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0]) - 0.00000044261787880556571061892601208781*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0]) + 0.00000014753929293518857020630867069594*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0]) + 0.00016295877211844301176698376951963*r2_array_vels[2,0]*cos(r2_array_poses[2,0]) + 0.00000048802162457195685884647870838906*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.00000024401081228597842942323935419453*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.000054846619794972429920141577098329*r2_array_vels[2,0]*sin(r2_array_poses[2,0]) - 0.000057214663066599423715123304954675*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0]) + 0.000019256593745259819358959213020415*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0])),\
                            -(12.393096591115689462490530868653*(0.000011089877593033423757847637491665*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000046679903642746034319030001569579*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.000032949940073977341546754725149535*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.00013869404912582092959861518971449*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.000014388836629933194457940340309125*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.000014388836629933194457940340309125*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0]) - 0.00000029507858587037714041261734139187*r2_array_vels[1,0]*cos(2.0*r2_array_poses[2,0]) - 0.00000044261787880556571061892601208781*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0]) - 0.00000014753929293518857020630867069594*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0]) + 0.00000038870777482652758327933797037624*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0]) - 0.00000038870777482652758327933797037624*r2_array_vels[1,0]*sin(2.0*r2_array_poses[2,0]) + 0.00000058306166223979137491900695556436*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0]) - 0.00000019435388741326379163966898518812*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0]) + 0.000054846619794972429920141577098329*r2_array_vels[1,0]*cos(r2_array_poses[2,0]) + 0.00003851318749051963871791842604083*r2_array_vels[2,0]*cos(r2_array_poses[2,0]) + 0.00016295877211844301176698376951963*r2_array_vels[1,0]*sin(r2_array_poses[2,0]) + 0.00011442932613319884743024660990935*r2_array_vels[2,0]*sin(r2_array_poses[2,0]) - 0.00000048802162457195685884647870838906*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.00000024401081228597842942323935419453*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.000019256593745259819358959213020415*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0]) + 0.000057214663066599423715123304954675*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0])),\
                            -(6.1965482955578447312452654343266*(0.0000018104058248269486959230379712567*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000047318802030173678236567316865601*r2_array_vels[2,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[3,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000094637604060347356473134633731202*r2_array_vels[3,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[3,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00000023477744314907700565386397703181*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r2_array_vels[2,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00000015651829543271800376924265135454*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r2_array_vels[3,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00000012466635754236392650934927385907*r2_array_vels[3,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r2_array_vels[3,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000013509006974121133933904142467225*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000010889777769779084336715637963644*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000062233402715820258713648653506498*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000040137590926689301431357553545922*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000032355408968495547238318382630818*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000040814009265224237900836641397514*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000010889777769779084336715637963644*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000011414433154663828459182407807069*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.0000035567455416376796676168942963269*r2_array_vels[3,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.0000062233402715820258713648653506498*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000012126546467137741302549481014413*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000032355408968495547238318382630818*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000033914250655107275559992688195273*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.000010567704780526012980875175449959*r2_array_vels[3,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000067916457716342943401243131998673*r2_array_vels[3,0]*cos(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000018349886738719767173914346365063*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.000018349886738719767173914346365063*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000046147876839521741265506259439426*r2_array_vels[3,0]*sin(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000062333178771181963254674636929534*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000023477744314907700565386397703181*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0]))],\
                            [-(12.393096591115689462490530868653*(0.000011089877593033423757847637491665*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000046679903642746034319030001569579*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.000032949940073977341546754725149535*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 0.00013869404912582092959861518971449*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.000014388836629933194457940340309125*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.000014388836629933194457940340309125*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0]) + 0.00000029507858587037714041261734139187*r2_array_vels[1,0]*cos(2.0*r2_array_poses[2,0]) - 0.00000044261787880556571061892601208781*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0]) + 0.00000014753929293518857020630867069594*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0]) + 0.00000038870777482652758327933797037624*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0]) + 0.00000038870777482652758327933797037624*r2_array_vels[1,0]*sin(2.0*r2_array_poses[2,0]) + 0.00000058306166223979137491900695556436*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0]) + 0.00000019435388741326379163966898518812*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0]) - 0.000054846619794972429920141577098329*r2_array_vels[1,0]*cos(r2_array_poses[2,0]) - 0.00003851318749051963871791842604083*r2_array_vels[2,0]*cos(r2_array_poses[2,0]) - 0.00016295877211844301176698376951963*r2_array_vels[1,0]*sin(r2_array_poses[2,0]) - 0.00011442932613319884743024660990935*r2_array_vels[2,0]*sin(r2_array_poses[2,0]) - 0.00000048802162457195685884647870838906*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.00000024401081228597842942323935419453*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.000019256593745259819358959213020415*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0]) + 0.000057214663066599423715123304954675*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0])),\
                            (12.393096591115689462490530868653*(0.00000073203243685793528826971806258359*r2_array_vels[2,0] + 0.000032949940073977341546754725149535*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.00013869404912582092959861518971449*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000011089877593033423757847637491665*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000046679903642746034319030001569579*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 0.000014388836629933194457940340309125*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000014388836629933194457940340309125*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) + 0.000021176246481773180157534027188411*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0] - 1.0*r2_array_poses[2,0]) - 0.00000038870777482652758327933797037624*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0]) - 0.00000058306166223979137491900695556436*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0]) + 0.00000019435388741326379163966898518812*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0]) - 0.00000029507858587037714041261734139187*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0]) - 0.00000044261787880556571061892601208781*r2_array_vels[2,0]*sin(2.0*r2_array_poses[1,0]) - 0.00000014753929293518857020630867069594*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0]) - 0.00016295877211844301176698376951963*r2_array_vels[2,0]*cos(r2_array_poses[2,0]) + 0.00000048802162457195685884647870838906*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.00000024401081228597842942323935419453*r2_array_vels[2,0]*cos(2.0*r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.000054846619794972429920141577098329*r2_array_vels[2,0]*sin(r2_array_poses[2,0]) - 0.000057214663066599423715123304954675*r2_array_vels[1,0]*cos(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0]) + 0.000019256593745259819358959213020415*r2_array_vels[1,0]*sin(2.0*r2_array_poses[1,0] + 3.0*r2_array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0])),\
                            (6.1965482955578447312452654343266*(0.0000012301346071758212453528510987523*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000023477744314907700565386397703181*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.000000062333178771181963254674636929534*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r2_array_vels[2,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000015651829543271800376924265135454*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.000000062333178771181963254674636929534*r2_array_vels[3,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00000012466635754236392650934927385907*r2_array_vels[3,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000012301346071758212453528510987523*r2_array_vels[3,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[2,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[3,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000094637604060347356473134633731202*r2_array_vels[3,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[3,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000062233402715820258713648653506498*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000040137590926689301431357553545922*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000032355408968495547238318382630818*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000013509006974121133933904142467225*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000010889777769779084336715637963644*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000062233402715820258713648653506498*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000012126546467137741302549481014413*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000032355408968495547238318382630818*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000012301346071758212453528510987523*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000033914250655107275559992688195273*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.000010567704780526012980875175449959*r2_array_vels[3,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.0000020945738194573054747217346601561*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000040814009265224237900836641397514*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000010889777769779084336715637963644*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000018104058248269486959230379712567*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 4.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000011414433154663828459182407807069*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.0000035567455416376796676168942963269*r2_array_vels[3,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.000018349886738719767173914346365063*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.000018349886738719767173914346365063*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000046147876839521741265506259439426*r2_array_vels[3,0]*cos(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r2_array_vels[3,0]*cos(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000061759747459797292648053987999074*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.0000067916457716342943401243131998673*r2_array_vels[3,0]*sin(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[3,0]*sin(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.00000023477744314907700565386397703181*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0]))],\
                            [-(12.393096591115689462490530868653*(0.0000000236594010150868391182836584328*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000047318802030173678236567316865601*r2_array_vels[1,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000070978203045260517354850975298401*r2_array_vels[2,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000005959686761779894122900711012458*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.000000005959686761779894122900711012458*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.00000007825914771635900188462132567727*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.000000031166589385590981627337318464767*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r2_array_vels[1,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000039129573858179500942310662838635*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.000000031166589385590981627337318464767*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000093499768156772944882011955394301*r2_array_vels[2,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000017707257813529208766126897548914*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.000000017707257813529208766126897548914*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.000004397601975160889430996951651744*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.0000074855893481507540633996510516977*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000013066034348456760683476758640084*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000022240977717816644270433931822616*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000004397601975160889430996951651744*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000013096146021710247985942522517903*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) + 0.0000017783727708188398338084471481634*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) + 0.0000074855893481507540633996510516977*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.000013066034348456760683476758640084*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000038910909790968770965195854575523*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000010500298722571454324661254081789*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) - 0.0000052838523902630064904375877249794*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.000000010500298722571454324661254081789*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) - 0.000022240977717816644270433931822616*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.000000011919373523559788245801422024916*r2_array_vels[1,0]*cos(r2_array_poses[1,0]) + 0.0000030879873729898646324026993999537*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.0000033958228858171471700621565999336*r2_array_vels[1,0]*cos(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000033958228858171471700621565999336*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000035414515627058417532253795097828*r2_array_vels[1,0]*sin(r2_array_poses[1,0]) + 0.0000091749433693598835869571731825317*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r2_array_vels[1,0]*sin(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000031166589385590981627337318464767*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000001173887215745385028269319885159*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0])),\
                            (12.393096591115689462490530868653*(0.00000007825914771635900188462132567727*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.000000031166589385590981627337318464767*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000062333178771181963254674636929534*r2_array_vels[1,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000000039129573858179500942310662838635*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.000000031166589385590981627337318464767*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000093499768156772944882011955394301*r2_array_vels[2,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000000017707257813529208766126897548914*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.000000017707257813529208766126897548914*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) + 0.0000000236594010150868391182836584328*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000047318802030173678236567316865601*r2_array_vels[1,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000070978203045260517354850975298401*r2_array_vels[2,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000000005959686761779894122900711012458*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.000000005959686761779894122900711012458*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0]) - 0.000013066034348456760683476758640084*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000022240977717816644270433931822616*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000004397601975160889430996951651744*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.0000074855893481507540633996510516977*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.000013066034348456760683476758640084*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000038910909790968770965195854575523*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.000000010500298722571454324661254081789*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) + 0.0000052838523902630064904375877249794*r2_array_vels[1,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.000000010500298722571454324661254081789*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) + 0.000022240977717816644270433931822616*r2_array_vels[2,0]*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.000004397601975160889430996951651744*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000013096146021710247985942522517903*r2_array_vels[2,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) + 0.0000017783727708188398338084471481634*r2_array_vels[1,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) - 0.00000001545343237957477264518306259928*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 2.0*r2_array_poses[2,0]) + 0.0000074855893481507540633996510516977*r2_array_vels[2,0]*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.000000035414515627058417532253795097828*r2_array_vels[1,0]*cos(r2_array_poses[1,0]) - 0.0000091749433693598835869571731825317*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r2_array_vels[1,0]*cos(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000023073938419760870632753129719713*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.000000031166589385590981627337318464767*r2_array_vels[1,0]*cos(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.000000011919373523559788245801422024916*r2_array_vels[1,0]*sin(r2_array_poses[1,0]) + 0.0000030879873729898646324026993999537*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000033958228858171471700621565999336*r2_array_vels[1,0]*sin(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) - 0.0000033958228858171471700621565999336*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0] - 1.0*r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.0000000236594010150868391182836584328*r2_array_vels[1,0]*sin(r2_array_poses[1,0] + 3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000001173887215745385028269319885159*r2_array_vels[2,0]*cos(r2_array_poses[1,0] + r2_array_poses[2,0] + r2_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0])),\
                            -(12.393096591115689462490530868653*(0.00000084731856930257572080657156757769*r2_array_vels[3,0]*cos(r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.000002719244617526501354400213739497*r2_array_vels[2,0]*cos(r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.00000001882445539169299431332681367841*r2_array_vels[2,0] + 0.00000091520925034094576585724545797076*r2_array_vels[2,0]*sin(r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.00000028517985752850915574952258467949*r2_array_vels[3,0]*sin(r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.0000000016838279031515584155026787045557*r2_array_vels[3,0]*cos(3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000000049978742738733698137598123890101*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0]) + 0.00000001882445539169299431332681367841*r2_array_vels[2,0]*cos(2.0*r2_array_poses[3,0]) + 0.000000012549636927795329542217875785607*r2_array_vels[3,0]*cos(2.0*r2_array_poses[3,0]) + 0.0000000024781124163886105413815559184205*r2_array_vels[3,0]*sin(3.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000000037940215467793255210079674662839*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0]) + 0.0000000056790717259550878354722185818877*r2_array_vels[2,0]*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.0000000056790717259550878354722185818877*r2_array_vels[3,0]*cos(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000000019113907382380476430967160359155*r2_array_vels[2,0]*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000000019113907382380476430967160359155*r2_array_vels[3,0]*sin(r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.0000000056790717259550878354722185818877*r2_array_vels[2,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000014712939187105509320044522915508*r2_array_vels[2,0]*cos(r2_array_poses[2,0] - 2.0*r2_array_poses[3,0]) - 0.0000000028395358629775439177361092909438*r2_array_vels[3,0]*cos(r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) - 0.0000014712939187105509320044522915508*r2_array_vels[3,0]*cos(r2_array_poses[2,0] - 2.0*r2_array_poses[3,0]) + 0.0000000019113907382380476430967160359155*r2_array_vels[2,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.00000049518965513265469245209687577658*r2_array_vels[2,0]*sin(r2_array_poses[2,0] - 2.0*r2_array_poses[3,0]) + 0.00000000095569536911902382154835801795777*r2_array_vels[3,0]*sin(r2_array_poses[2,0] - 1.0*r2_array_poses[3,0]) + 0.00000049518965513265469245209687577658*r2_array_vels[3,0]*sin(r2_array_poses[2,0] - 2.0*r2_array_poses[3,0]) + 0.0000041905385362370522864046660310477*r2_array_vels[2,0]*cos(r2_array_poses[2,0]) + 0.0000000049978742738733698137598123890101*r2_array_vels[2,0]*cos(2.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.0000000099957485477467396275196247780201*r2_array_vels[3,0]*cos(2.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.0000014103989054736004583093423337473*r2_array_vels[2,0]*sin(r2_array_poses[2,0]) - 0.0000000037940215467793255210079674662839*r2_array_vels[2,0]*sin(2.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) + 0.0000000075880430935586510420159349325677*r2_array_vels[3,0]*sin(2.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) + 0.00000037001367649928532146682918818532*r2_array_vels[3,0]*cos(3.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0]) - 0.00000054455415796963772019116743236536*r2_array_vels[3,0]*sin(3.0*r2_array_poses[2,0] + 2.0*r2_array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(r2_array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(r2_array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(r2_array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(r2_array_poses[2,0])**2*sin(r2_array_poses[2,0]))]])

            g2 = np.matrix([[-(0.035203830176723227487150601985496*(4.1427522760415398866774927053491*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 1.1480641618997249418596419707606*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 4.1427522760415398866774927053491*cos(r2_array_poses[2,0]) - 1.1480641618997249418596419707606*sin(r2_array_poses[2,0])))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))],\
                            [(0.035203830176723227487150601985496*(4.1427522760415398866774927053491*sin(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) - 1.1480641618997249418596419707606*cos(2.0*r2_array_poses[1,0] + r2_array_poses[2,0]) + 5.0015664792327146670195898696831*cos(r2_array_poses[2,0]) + 15.592172647535819362914226764669*sin(r2_array_poses[2,0])))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))],
                            [(0.035203830176723227487150601985496*(0.39915788293818967301328217868739*cos(r2_array_poses[1,0] + r2_array_poses[3,0]) - 1.3032952329320036576430070773158*sin(r2_array_poses[1,0] + r2_array_poses[3,0]) + 0.21505431393594978133666999225623*cos(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) - 0.18410356900223989167661218643116*cos(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0]) + 0.63896347794598232141540434708604*sin(r2_array_poses[1,0] + 2.0*r2_array_poses[2,0] + r2_array_poses[3,0]) + 0.66433175498602133622760273022979*sin(r2_array_poses[1,0] - 1.0*r2_array_poses[3,0])))/(0.047766999999999996961985715415722*cos(r2_array_poses[2,0]) + 0.14192399999999999460342792190204*sin(r2_array_poses[2,0]))]])

            #Object dynamics 3rd component of Co is always 0 and we have rotations only about 3rd axis
            Ro1 = np.matrix([[cos(self.obj_pose1[2]), -sin(self.obj_pose1[2]), 0], [sin(self.obj_pose1[2]), cos(self.obj_pose1[2]), 0], [0,0,1]])
            Io_i1 = np.dot(Ro1, np.dot(self.Io, Ro1.T))
            Mo1 = np.matrix([[self.m_obj, 0, 0],[0, self.m_obj, 0],[0,0, Io_i1[2,2]]])

            Ro2 = np.matrix([[cos(self.obj_pose2[2]), -sin(self.obj_pose2[2]), 0], [sin(self.obj_pose2[2]), cos(self.obj_pose2[2]), 0], [0,0,1]])
            Io_i2 = np.dot(Ro2, np.dot(self.Io, Ro2.T))
            Mo2 = np.matrix([[self.m_obj, 0, 0],[0, self.m_obj, 0],[0,0, Io_i2[2,2]]])

            #Quaternions
            eta_o1 = cos(obj_array_pose1[2,0]/2)
            eps_o1 = sin(obj_array_pose1[2,0]/2) * np.array([[0],[0],[1]])
            eta_o2 = cos(obj_array_pose2[2,0]/2)
            eps_o2 = sin(obj_array_pose2[2,0]/2) * np.array([[0],[0],[1]])
            Rod = np.matrix([[cos(obj_target_pose[2,0]), -sin(obj_target_pose[2,0]), 0], [sin(obj_target_pose[2,0]), cos(obj_target_pose[2,0]), 0], [0,0,1]])
            ksi_den = 2*sqrt(Rod[0,0]+Rod[1,1]+Rod[2,2]+1)
            ksi_1 = (Rod[0,0]+Rod[1,1]+Rod[2,2]+1)/ksi_den
            ksi_2 = (Rod[2,1] - Rod[1,2])/ksi_den
            ksi_3 = (Rod[0,2] - Rod[2,0])/ksi_den
            ksi_4 = (Rod[1,0] - Rod[0,1])/ksi_den
            eta_od = ksi_1 #cos(obj_target_pose[2,0]/2)
            eps_od = sin(obj_target_pose[2,0]/2) * np.array([[0],[0],[1]])#np.array([[ksi_2],[ksi_3],[ksi_4]]) #sin(obj_target_pose[2,0]/2) * np.array([[0],[0],[1]])
            # print("epsilon")
            # print(eps_o)
            # print("epsilon des:")
            # print(eps_od)
            
            #Errors agent 1
            #Position
            e_p1 = obj_array_pose1[0:2] - obj_target_pose[0:2]
            e_eta1 = eta_o1*eta_od + sin(obj_array_pose1[2,0]/2)*sin(obj_target_pose[2,0]/2)
            S_eps1 = np.matrix([[0, -eps_o1[2,0], eps_o1[1,0]],[eps_o1[2,0], 0, -eps_o1[0,0]],[-eps_o1[1,0], eps_o1[0,0], 0]])
            e_eps1 = eta_o1*eps_od - eta_od*eps_o1 + np.dot(S_eps1, eps_od)
            #Velocity
            e_p_dot1 = obj_array_vel1[0:2] - obj_target_vel[0:2]
            e_omega1 = np.array([[0], [0], [obj_array_vel1[2,0] - obj_target_vel[2,0]]])
            S_e_eps1 = np.matrix([[0, -e_eps1[2,0], e_eps1[1,0]],[e_eps1[2,0], 0, -e_eps1[0,0]],[-e_eps1[1,0], e_eps1[0,0], 0]])
            e_eta_dot1 = 0.5*np.dot(e_eps1.T, e_omega1)
            e_eps_dot1 = -0.5*np.dot((np.identity(3)*e_eta1 + S_e_eps1), e_omega1) - np.dot(S_e_eps1, np.array([[0], [0], [obj_target_vel[2,0]]]))
            
            #Reference signals agent 1
            e1 = np.array([[e_p1[0,0]], [e_p1[1,0]], [-e_eps1[2,0]]])
            e_dot1 = np.array([[e_p_dot1[0,0]],[e_p_dot1[1,0]],[-e_eps_dot1[2,0]]])
            v_o_r1 = obj_target_vel - np.dot(self.K_ref, e1)
            q1_dot_des = np.sign(np.dot(r1_J_e_inv, v_o_r1))
            v_o_r_dot1 = obj_target_acc - np.dot(self.K_ref_dot, e_dot1)
            e_v1 = obj_array_vel1 - v_o_r1

            #Errors agent 1
            #Position
            e_p2 = obj_array_pose2[0:2] - obj_target_pose[0:2]
            e_eta2 = eta_o2*eta_od + sin(obj_array_pose2[2,0]/2)*sin(obj_target_pose[2,0]/2)
            S_eps2 = np.matrix([[0, -eps_o2[2,0], eps_o2[1,0]],[eps_o2[2,0], 0, -eps_o2[0,0]],[-eps_o2[1,0], eps_o2[0,0], 0]])
            e_eps2 = eta_o2*eps_od - eta_od*eps_o2 + np.dot(S_eps2, eps_od)
            #velocity
            e_p_dot2 = obj_array_vel2[0:2] - obj_target_vel[0:2]
            e_omega2 = np.array([[0], [0], [obj_array_vel2[2,0] - obj_target_vel[2,0]]])
            S_e_eps2 = np.matrix([[0, -e_eps2[2,0], e_eps2[1,0]],[e_eps2[2,0], 0, -e_eps2[0,0]],[-e_eps2[1,0], e_eps2[0,0], 0]])
            e_eta_dot2 = 0.5*np.dot(e_eps2.T, e_omega2)
            e_eps_dot2 = -0.5*np.dot((np.identity(3)*e_eta2 + S_e_eps2), e_omega2) - np.dot(S_e_eps2, np.array([[0], [0], [obj_target_vel[2,0]]]))
            #Reference signals
            e2 = np.array([[e_p2[0,0]], [e_p2[1,0]], [-e_eps2[2,0]]]) # np.array([[e_p2[0,0]], [e_p2[1,0]], [obj_array_pose2[2,0] - obj_target_pose[2,0]]])
            e_dot2 = np.array([[e_p_dot2[0,0]],[e_p_dot2[1,0]],[-e_eps_dot2[2,0]]]) # np.array([[e_p_dot2[0,0]],[e_p_dot2[1,0]],[obj_array_vel2[2,0] - obj_target_vel[2,0]]])
            v_o_r2 = obj_target_vel - np.dot(self.K_ref, e2)
            q2_dot_des = np.sign(np.dot(r2_J_e_inv, v_o_r2))
            v_o_r_dot2 = obj_target_acc - np.dot(self.K_ref_dot, e_dot2)
            e_v2 = obj_array_vel2 - v_o_r2

            #print errors
            # print("e_p_dot")
            # print(e_p_dot)
            # print("e_eps_dot")
            # print(e_eps_dot)
            # print("ep1:")
            # print(e_p1)
            # print("e_omega1")
            # print(e_omega1)
            # print("ep2:")
            # print(e_p2)
            # print("e_omega2")
            # print(e_omega2)
            # print("e_eta")
            # print(e_eta)
            # print("e_eps")
            # print(e_eps)
            # print("\ne:")
            # print(e)
            # print("e_dot:")
            # print(e_dot)
            # print("v ref1: ")
            # print(v_o_r1)
            # print("v_ref_dot1:")
            # print(v_o_r_dot1)
            # print("v ref2: ")
            # print(v_o_r2)
            # print("v_ref_dot2:")
            # print(v_o_r_dot2)

            #Control inputs, add Co*v_o_r if different from 0
            obj_acc2 = obj_array_vel2 - self.obj_vel_old2
            obj_acc2 = obj_acc2*(1.0/self.period)
            self.obj_vel_old2 = obj_array_vel2
            e_acc2 = obj_acc2 - obj_target_acc

            obj_acc1 = obj_array_pose2 - self.obj_vel_old1
            obj_acc1 = obj_acc1*(1.0/self.period)
            self.obj_vel_old1 = obj_array_pose2
            e_acc1 = obj_acc1 - obj_target_acc
            #robot1
            trm1 = np.dot(C1, J_o1) + np.dot(M1, J_o1_dot)
            trm1 = np.dot(trm1, v_o_r1)
            trm2 = np.dot(M1, J_o1)
            trm2 = np.dot(trm2, v_o_r_dot1)
            J_o1_t = J_o1.T
            J_o1_t_inv = np.linalg.inv(J_o1_t)
            errors_trm = np.dot(self.Kv, e_v1) + self.c1*e1
            trm3 = np.dot(J_o1_t_inv, errors_trm)
            ref_term = np.dot(Mo1, v_o_r_dot1) + self.go
            lambda1 = self.c1*np.dot(J_o1_t_inv, ref_term)
            u_r1 = g1 + trm1 + trm2 - trm3 + lambda1
            #robot2
            trm1 = np.dot(C2, J_o2) + np.dot(M2, J_o2_dot)
            trm1 = np.dot(trm1, v_o_r2)
            trm2 = np.dot(M2, J_o2)
            trm2 = np.dot(trm2, v_o_r_dot2)
            J_o2_t = J_o2.T
            J_o2_t_inv = np.linalg.inv(J_o2_t)
            errors_trm = np.dot(self.Kv, e_v2) + self.c2*e2
            trm3 = np.dot(J_o2_t_inv, errors_trm)
            ref_term = np.dot(Mo2, v_o_r_dot2) + self.go
            lambda2 = self.c2*np.dot(J_o2_t_inv, ref_term)
            u_r2 = g2 + trm1 + trm2 - trm3 + lambda2

            #Internal Forces evaluation and control
            u = np.array([[u_r1[0,0]],[u_r1[1,0]],[u_r1[2,0]],[u_r2[0,0]],[u_r2[1,0]],[u_r2[2,0]]])
            u_i = np.dot((self.I-0.5*np.dot(G_star,G.T)), u)

            u_m = u - u_i
            u_m1 = u_r1 - u_m[0:3]
            u_m2 = u_r2 - u_m[3:6]

            f_int1 = np.dot((self.I-0.5*np.dot(G1_star,G1.T)), self.fd_int)
            f_int2 = np.dot((self.I-0.5*np.dot(G2_star,G2.T)), self.fd_int)
            ud_r1 = u_r1 - f_int1[0:3]
            ud_r2 = u_r2 - f_int2[3:6]

            #new internal forces
            u_i_new = np.dot((self.I-0.5*np.dot(G_star,G.T)), u_m)

            control_torque_r1 = np.dot(r1_J_e.T, u_m1)
            control_torque_r2 = np.dot(r2_J_e.T, u_m2)

            print("\nForces: ")
            # print(u_r1)
            # print(u_r2)
            # print("Torques: ")
            # print(control_torque_r1)
            # print(control_torque_r2)
            print(u_i_new)
            # print(f_int1)
            # print(f_int2)
            # print(control_torque_r1 - control_torque_r2)
            #Create ROS message
            if  norm(control_torque_r2) < 10 and norm(control_torque_r1) < 10:
                #Create ROS message
                self.torques1.data = [control_torque_r1[0,0], control_torque_r1[1,0], control_torque_r1[2,0], q1_dot_des[0,0], q1_dot_des[1,0], q1_dot_des[2,0]]
                self.torques2.data = [control_torque_r2[0,0], control_torque_r2[1,0], control_torque_r2[2,0], q2_dot_des[0,0], q2_dot_des[1,0], q2_dot_des[2,0]]
                self.r1_torque_pub.publish(self.torques1)
                self.r2_torque_pub.publish(self.torques2)
            else:
                #There's a problem with the torques
                print("\n Torques: ")
                print(control_torque_r1)
                print(norm(control_torque_r1))
                print(control_torque_r2)
                print(norm(control_torque_r2))
                print("Jacobians")
                print(r1_J_e.T)
                print(r2_J_e.T)
                print("q1,q2")
                print(r1_array_poses)
                print(r2_array_poses)
                rospy.logerr("Torques limit reached, shutting down driver and controller")
                try:
                    self.r1_sec_stop('Torques limit reached')
                except:
                    print("r1 stopped")
                try:
                    self.r2_sec_stop('Torques limit reached')
                except:
                    print("r2 stopped")

                rospy.signal_shutdown("Torques limit reached")
            #                       0           1          2          3                4                   5             6           7           8
            #self.errors.data = [e2[0,0], e2[1,0], obj_array_pose2[2,0] - obj_target_pose[2,0], np.linalg.norm(u_i[0:3]), np.linalg.norm(u_i[3:6]), np.linalg.norm(u_r1), np.linalg.norm(u_r2), np.linalg.norm(u_i_new[0:3]), np.linalg.norm(u_i_new[3:6])]
            self.errors.data = [np.linalg.norm(u_r1), np.linalg.norm(u_r2), np.linalg.norm(u_m1), np.linalg.norm(u_m1), np.linalg.norm(u_i_new)]
            self.errors_pub.publish(self.errors)
            self.pub_rate.sleep()



if __name__ == '__main__':
    #Iitialize the node
    rospy.init_node('windowx_coop_controller')
    #Create windowx controller object
    wc = WindowxController()

    try:
        rospy.spin()
    except KeyboardInterrupt:
        print "Shutting down ROS WindowX controller node"
