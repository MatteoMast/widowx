#!/usr/bin/env python

"""
Start ROS node to pubblish torques for manuvering windowx arm through the v-rep simulator.
"""

import cv2
import rospy, roslib
from math import sin, cos
from windowx_msgs.msg import TargetConfiguration
from std_msgs.msg import Float32MultiArray, MultiArrayDimension
import numpy as np
from windowx_arm import *

class WindowxController():
    """Class to compute and pubblish joints torques"""
    def __init__(self):
        #initialize pose, velocity listeners and torques publisher
        self.pose_sub = rospy.Subscriber('/windowx_3links_r1/joints_poses', Float32MultiArray, self._pose_callback, queue_size=1)
        self.vel_sub = rospy.Subscriber('/windowx_3links_r1/joints_vels', Float32MultiArray, self._vel_callback, queue_size=1)
        self.target_sub = rospy.Subscriber('/windowx_3links_r1/target_conf', TargetConfiguration, self._target_callback, queue_size=10)
        self.torque_pub = rospy.Publisher('/windowx_3links_r1/torques', Float32MultiArray, queue_size=1)
        self.pub_rate = rospy.Rate(150)
        #Initial pose, all joints will move to 0 position, and initialization of pose and vels vectors
        #Here the target configuration is x_e = [x,y,orientation] x_e_dot x_e_dotdot of the end effector wrt the inertial frame of the robot
        self.target_pose = np.array([[0.3,0.1,0.0]]).T
        self.target_vel = np.array([[0.0,0.0,0.0]]).T
        self.target_acc = np.array([[0.0,0.0,0.0]]).T
        self.eI = np.array([[0.0, 0.0, 0.0]]).T
        #Friction matrices
        self.Fs = np.matrix([[0.0843,0,0],[0,0.0843,0],[0,0, 0.0078]])
        self.Fv = np.matrix([[0.0347,0,0],[0,0.0347,0],[0,0, 0.0362]])

        self.joints_poses = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        self.joints_vels =  [0.0, 0.0, 0.0, 0.0, 0.0]
        #Control Kd and Kp
        self.KD = np.matrix([[30, 0, 0], [0, 30, 0], [0, 0, 50]])
        self.KP = np.matrix([[750, 0, 0],[0, 750, 0], [0, 0, 1000]])
        #self.KI = np.matrix([[500, 0, 0],[0, 500, 0], [0, 0, 700]])
        self.KI = np.matrix([[0, 0, 0],[0, 0, 0], [0, 0, 0]])
        #Initialize torque message
        self.torques = Float32MultiArray()
        self.torques_layout = MultiArrayDimension('control_torques', 6, 0)
        self.torques.layout.dim = [self.torques_layout]
        self.torques.layout.data_offset = 0
        #Challer check
        self.pose_call = False
        self.vel_call = False
        print("\nWindowX controller node created")
        print("\nWaiting for target position, velocity and acceleration in:")
        print("     /windowx_2links/target_conf")
        print("Reading current position and velocity from:")
        print("     /windowx_2links/joints_poses")
        print("     /windowx_2links/joints_vels")
        print("Publishing torques in:")
        print("     /windowx_2links/torques")
        self.compute_torques()


    def _pose_callback(self, msg):
        """
        ROS callback to get the joint poses
        """
        self.joints_poses = msg.data
        #self.compute_torques('pose')

    def _vel_callback(self, msg):
        """
        ROS callback to get the joint velocities
        """
        self.joints_vels = msg.data
        #self.compute_torques('vel')

    def _target_callback(self, msg):
        """
        ROS callback to get the target position
        """
        self.target_pose = np.asarray(msg.pos)[np.newaxis].T
        self.target_vel = np.asarray(msg.vel)[np.newaxis].T
        self.target_acc = np.asarray(msg.acc)[np.newaxis].T

        # print("\nGoing to:")
        # print("Pos: \n" + str(self.target_pose))
        # print("Vel: \n" + str(self.target_vel))
        # print("Acc: \n" + str(self.target_acc))

    def compute_torques(self):
        """
        Compute and pubblish torques values for 3rd and 4th joints
        """

        #If both vels and poses has called compute torques
        while not rospy.is_shutdown():
            #Reset checkers
            self.pose_call = False
            self.vel_call = False
            #Vels and poses
            # print "Heard:"
            # print "    ".join(str(n) for n in self.joints_vels)
            # print "    ".join(str(n) for n in self.joints_poses)
            #Compute B g and C matrices
            array_vels = np.asarray(self.joints_vels)[np.newaxis].T
            array_poses = np.asarray(self.joints_poses)[np.newaxis].T
            # print("array_vels")
            # print(array_vels[1:4])
            # print("array_poses")
            # print(array_poses[1:4])

            # Compute ee position from joints_poses
            x_e = np.array([[L1_X*cos(array_poses[1]) - L1_Y*sin(array_poses[1]) + L2*cos(array_poses[1]+array_poses[2]) + L3*cos(array_poses[1]+array_poses[2]+array_poses[3])],\
                            [L1_X*sin(array_poses[1]) + L1_Y*cos(array_poses[1]) + L2*sin(array_poses[1]+array_poses[2]) + L3*sin(array_poses[1]+array_poses[2]+array_poses[3])],\
                            [array_poses[1] + array_poses[2] + array_poses[3]]])
            # Compute ee velocities from joints_vels
            J_e = np.matrix([[ 0.047766999999999996961985715415722*cos(array_poses[1]) - 0.14203*sin(array_poses[1] + array_poses[2]) - 0.16036*sin(array_poses[1] + array_poses[2] + array_poses[3]) - 0.14192399999999999460342792190204*sin(array_poses[1]),\
                             - 0.16036*sin(array_poses[1] + array_poses[2] + array_poses[3]) - 0.14203*sin(array_poses[1] + array_poses[2]), -0.16036*sin(array_poses[1] + array_poses[2] + array_poses[3])],\
                            [ 0.16036*cos(array_poses[1] + array_poses[2] + array_poses[3]) + 0.14203*cos(array_poses[1] + array_poses[2]) + 0.14192399999999999460342792190204*cos(array_poses[1]) + 0.047766999999999996961985715415722*sin(array_poses[1]),\
                              0.16036*cos(array_poses[1] + array_poses[2] + array_poses[3]) + 0.14203*cos(array_poses[1] + array_poses[2]),  0.16036*cos(array_poses[1] + array_poses[2] + array_poses[3])],\
                            [1.0,1.0,1.0]])
            v_e = np.dot(J_e, array_vels[1:4])
            #Position and velocities errors
            err_vels = v_e - self.target_vel
            err_poses = x_e - self.target_pose
            self.eI = self.eI + err_poses/60

            print("\nvelocity error:")
            print(err_vels)
            print("position error:")
            print(err_poses)

            M =np.matrix([[(49.572386364462757849962123474612*(0.0001361769666249375655142419592553*cos(2.0*array_poses[1,0]) - 0.0000010395654923422999338829146587226*sin(2.0*array_poses[1,0] + array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(2.0*array_poses[1,0] + array_poses[2,0]) - 0.00010430570934130451406174333622838*cos(2.0*array_poses[2,0]) + 0.00010337561876074369688845282770292*sin(2.0*array_poses[1,0]) + 0.000079181285283975840220601603442762*sin(2.0*array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(array_poses[2,0]) + 0.00040313592533045451009466604148129*cos(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(array_poses[2,0]) + 0.00070506131454818413163718096909733))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576),(49.572386364462757849962123474612*(0.0000010395654923422999338829146587226*cos(2.0*array_poses[1,0] + array_poses[2,0]) - 0.0000030887284722755998825530154849872*sin(2.0*array_poses[1,0] + array_poses[2,0]) - 0.00010337561876074369688845282770292*cos(2.0*array_poses[1,0]) + 0.0001361769666249375655142419592553*sin(2.0*array_poses[1,0]) + 0.00040313592533045451009466604148129*sin(2.0*array_poses[1,0] + 2.0*array_poses[2,0])))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576), -(24.786193182231378924981061737306*(0.00012929375397198337047756129282388*sin(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000088378184731947519431226043473656*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000033154628448945718466064590900881*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.00021336040564880879742640358132956*sin(array_poses[1,0] + array_poses[2,0] + array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000043674676735949976011727681172359*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.00000016670472235201121739746419467276*cos(array_poses[1,0] + array_poses[3,0]) + 0.00000024953154947055056846529683193203*sin(array_poses[1,0] + array_poses[2,0]) + 0.00000049530849781411519716620156317255*sin(array_poses[1,0] + array_poses[3,0]) + 0.00000016670472235201121739746419467276*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.00000015087736493725280842073467806088*cos(array_poses[1,0] - 1.0*array_poses[2,0]) + 0.00000033340944470402243479492838934553*cos(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.00000049530849781411519716620156317255*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000019875113818734438265101740694115*sin(array_poses[1,0] - 1.0*array_poses[2,0]) - 0.0000009906169956282303943324031263451*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.0000088378184731947519431226043473656*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576)],\
                          [(49.572386364462757849962123474612*(0.0000010395654923422999338829146587226*cos(2.0*array_poses[1,0] + array_poses[2,0]) - 0.0000030887284722755998825530154849872*sin(2.0*array_poses[1,0] + array_poses[2,0]) - 0.00010337561876074369688845282770292*cos(2.0*array_poses[1,0]) + 0.0001361769666249375655142419592553*sin(2.0*array_poses[1,0]) + 0.00040313592533045451009466604148129*sin(2.0*array_poses[1,0] + 2.0*array_poses[2,0])))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576),(49.572386364462757849962123474612*(0.0000030887284722755998825530154849872*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(2.0*array_poses[1,0] + array_poses[2,0]) - 0.0001361769666249375655142419592553*cos(2.0*array_poses[1,0]) - 0.00010430570934130451406174333622838*cos(2.0*array_poses[2,0]) - 0.00010337561876074369688845282770292*sin(2.0*array_poses[1,0]) + 0.000079181285283975840220601603442762*sin(2.0*array_poses[2,0]) - 0.0000030887284722755998825530154849872*cos(array_poses[2,0]) - 0.00040313592533045451009466604148129*cos(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) + 0.0000010395654923422999338829146587226*sin(array_poses[2,0]) + 0.00070506131454818413163718096909733))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576),  (24.786193182231378924981061737306*(0.00012929375397198337047756129282388*cos(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.00021336040564880879742640358132956*cos(array_poses[1,0] + array_poses[2,0] + array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.000043674676735949976011727681172359*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000088378184731947519431226043473656*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000033154628448945718466064590900881*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.00000024953154947055056846529683193203*cos(array_poses[1,0] + array_poses[2,0]) + 0.00000049530849781411519716620156317255*cos(array_poses[1,0] + array_poses[3,0]) + 0.00000016670472235201121739746419467276*sin(array_poses[1,0] + array_poses[3,0]) + 0.00000049530849781411519716620156317255*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000019875113818734438265101740694115*cos(array_poses[1,0] - 1.0*array_poses[2,0]) - 0.0000009906169956282303943324031263451*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.00000016670472235201121739746419467276*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000015087736493725280842073467806088*sin(array_poses[1,0] - 1.0*array_poses[2,0]) - 0.00000033340944470402243479492838934553*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) - 0.0000088378184731947519431226043473656*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576)],\
                          [ -(24.786193182231378924981061737306*(0.00012929375397198337047756129282388*sin(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000088378184731947519431226043473656*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000033154628448945718466064590900881*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.00021336040564880879742640358132956*sin(array_poses[1,0] + array_poses[2,0] + array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000043674676735949976011727681172359*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.00000016670472235201121739746419467276*cos(array_poses[1,0] + array_poses[3,0]) + 0.00000024953154947055056846529683193203*sin(array_poses[1,0] + array_poses[2,0]) + 0.00000049530849781411519716620156317255*sin(array_poses[1,0] + array_poses[3,0]) + 0.00000016670472235201121739746419467276*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.00000015087736493725280842073467806088*cos(array_poses[1,0] - 1.0*array_poses[2,0]) + 0.00000033340944470402243479492838934553*cos(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.00000049530849781411519716620156317255*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000019875113818734438265101740694115*sin(array_poses[1,0] - 1.0*array_poses[2,0]) - 0.0000009906169956282303943324031263451*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.0000088378184731947519431226043473656*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) + 0.000011642080847389553545544785987331*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576), (24.786193182231378924981061737306*(0.00012929375397198337047756129282388*cos(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.00021336040564880879742640358132956*cos(array_poses[1,0] + array_poses[2,0] + array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.000043674676735949976011727681172359*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000088378184731947519431226043473656*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000033154628448945718466064590900881*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.00000024953154947055056846529683193203*cos(array_poses[1,0] + array_poses[2,0]) + 0.00000049530849781411519716620156317255*cos(array_poses[1,0] + array_poses[3,0]) + 0.00000016670472235201121739746419467276*sin(array_poses[1,0] + array_poses[3,0]) + 0.00000049530849781411519716620156317255*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000019875113818734438265101740694115*cos(array_poses[1,0] - 1.0*array_poses[2,0]) - 0.0000009906169956282303943324031263451*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.00000016670472235201121739746419467276*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000015087736493725280842073467806088*sin(array_poses[1,0] - 1.0*array_poses[2,0]) - 0.00000033340944470402243479492838934553*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.000011642080847389553545544785987331*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) - 0.0000088378184731947519431226043473656*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0])))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576),-(49.572386364462757849962123474612*(0.000000026732769276368518821857358257724*sin(array_poses[2,0] + 2.0*array_poses[3,0]) - 0.000000031871732519722545201917151377082*cos(2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000007942767070947151301757208267035*cos(array_poses[2,0] + 2.0*array_poses[3,0]) + 0.000000024194694241337860358349012973843*sin(2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000020028861984271396211740451538764*cos(2.0*array_poses[2,0]) + 0.000010366773193473626644890864458619*cos(2.0*array_poses[3,0]) - 0.0000015204450884856399668441155638056*sin(2.0*array_poses[2,0]) + 0.00000007942767070947151301757208267035*cos(array_poses[2,0]) + 0.00000004001487927309748915909499996862*cos(array_poses[3,0]) + 0.0000035018355806884690766203254763997*cos(2.0*array_poses[2,0] + 2.0*array_poses[3,0]) - 0.000000026732769276368518821857358257724*sin(array_poses[2,0]) - 0.0000026583381090364677066090588984327*sin(2.0*array_poses[2,0] + 2.0*array_poses[3,0]) - 0.000017277937413586096424197894997158))/(0.013558567415999998622109604440311*sin(2.0*array_poses[2,0]) - 0.017860735486999998758427465439524*cos(2.0*array_poses[2,0]) + 0.022424108064999998177960152112576)]])

            C = np.matrix([[-(12.393096591115689462490530868653*(0.000032949940073977341546754725149535*array_vels[1,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) - 0.00000073203243685793528826971806258359*array_vels[2,0] + 0.00013869404912582092959861518971449*array_vels[2,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000011089877593033423757847637491665*array_vels[1,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000046679903642746034319030001569579*array_vels[2,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000014388836629933194457940340309125*array_vels[1,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000014388836629933194457940340309125*array_vels[2,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[1,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[2,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.00000038870777482652758327933797037624*array_vels[1,0]*cos(2.0*array_poses[1,0]) - 0.00000058306166223979137491900695556436*array_vels[2,0]*cos(2.0*array_poses[1,0]) - 0.00000019435388741326379163966898518812*array_vels[2,0]*cos(2.0*array_poses[2,0]) - 0.00000029507858587037714041261734139187*array_vels[1,0]*sin(2.0*array_poses[1,0]) - 0.00000044261787880556571061892601208781*array_vels[2,0]*sin(2.0*array_poses[1,0]) + 0.00000014753929293518857020630867069594*array_vels[2,0]*sin(2.0*array_poses[2,0]) + 0.00016295877211844301176698376951963*array_vels[2,0]*cos(array_poses[2,0]) + 0.00000048802162457195685884647870838906*array_vels[1,0]*cos(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) - 0.00000024401081228597842942323935419453*array_vels[2,0]*cos(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) - 0.000054846619794972429920141577098329*array_vels[2,0]*sin(array_poses[2,0]) - 0.000057214663066599423715123304954675*array_vels[1,0]*cos(2.0*array_poses[1,0] + 3.0*array_poses[2,0]) + 0.000019256593745259819358959213020415*array_vels[1,0]*sin(2.0*array_poses[1,0] + 3.0*array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0])),(12.393096591115689462490530868653*(0.000011089877593033423757847637491665*array_vels[1,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000046679903642746034319030001569579*array_vels[2,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) - 0.000032949940073977341546754725149535*array_vels[1,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) - 0.00013869404912582092959861518971449*array_vels[2,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[1,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[2,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.000014388836629933194457940340309125*array_vels[1,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.000014388836629933194457940340309125*array_vels[2,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.00000029507858587037714041261734139187*array_vels[1,0]*cos(2.0*array_poses[1,0]) - 0.00000029507858587037714041261734139187*array_vels[1,0]*cos(2.0*array_poses[2,0]) - 0.00000044261787880556571061892601208781*array_vels[2,0]*cos(2.0*array_poses[1,0]) - 0.00000014753929293518857020630867069594*array_vels[2,0]*cos(2.0*array_poses[2,0]) + 0.00000038870777482652758327933797037624*array_vels[1,0]*sin(2.0*array_poses[1,0]) - 0.00000038870777482652758327933797037624*array_vels[1,0]*sin(2.0*array_poses[2,0]) + 0.00000058306166223979137491900695556436*array_vels[2,0]*sin(2.0*array_poses[1,0]) - 0.00000019435388741326379163966898518812*array_vels[2,0]*sin(2.0*array_poses[2,0]) + 0.000054846619794972429920141577098329*array_vels[1,0]*cos(array_poses[2,0]) + 0.00003851318749051963871791842604083*array_vels[2,0]*cos(array_poses[2,0]) + 0.00016295877211844301176698376951963*array_vels[1,0]*sin(array_poses[2,0]) + 0.00011442932613319884743024660990935*array_vels[2,0]*sin(array_poses[2,0]) - 0.00000048802162457195685884647870838906*array_vels[1,0]*sin(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) + 0.00000024401081228597842942323935419453*array_vels[2,0]*sin(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) + 0.000019256593745259819358959213020415*array_vels[1,0]*cos(2.0*array_poses[1,0] + 3.0*array_poses[2,0]) + 0.000057214663066599423715123304954675*array_vels[1,0]*sin(2.0*array_poses[1,0] + 3.0*array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0])), -(6.1965482955578447312452654343266*(0.0000018104058248269486959230379712567*array_vels[1,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000047318802030173678236567316865601*array_vels[2,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[2,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[3,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.000000094637604060347356473134633731202*array_vels[3,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[3,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) - 0.0000012301346071758212453528510987523*array_vels[1,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) + 0.00000023477744314907700565386397703181*array_vels[2,0]*sin(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.000000062333178771181963254674636929534*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000062333178771181963254674636929534*array_vels[2,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.0000012301346071758212453528510987523*array_vels[2,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) + 0.00000015651829543271800376924265135454*array_vels[3,0]*sin(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.000000062333178771181963254674636929534*array_vels[3,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.00000012466635754236392650934927385907*array_vels[3,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.0000012301346071758212453528510987523*array_vels[3,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) - 0.0000020945738194573054747217346601561*array_vels[1,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.000013509006974121133933904142467225*array_vels[2,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.000010889777769779084336715637963644*array_vels[3,0]*cos(array_poses[1,0] + array_poses[3,0]) + 0.0000062233402715820258713648653506498*array_vels[1,0]*sin(array_poses[1,0] + array_poses[3,0]) + 0.000040137590926689301431357553545922*array_vels[2,0]*sin(array_poses[1,0] + array_poses[3,0]) + 0.000032355408968495547238318382630818*array_vels[3,0]*sin(array_poses[1,0] + array_poses[3,0]) - 0.0000020945738194573054747217346601561*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[1,0]*cos(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) + 0.0000040814009265224237900836641397514*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[2,0]*cos(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) - 0.000010889777769779084336715637963644*array_vels[3,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[3,0]*cos(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) + 0.000011414433154663828459182407807069*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.0000035567455416376796676168942963269*array_vels[3,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.0000062233402715820258713648653506498*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000012301346071758212453528510987523*array_vels[1,0]*sin(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) + 0.000012126546467137741302549481014413*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000012301346071758212453528510987523*array_vels[2,0]*sin(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) - 0.000032355408968495547238318382630818*array_vels[3,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000012301346071758212453528510987523*array_vels[3,0]*sin(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) - 0.000033914250655107275559992688195273*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.000010567704780526012980875175449959*array_vels[3,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.0000061759747459797292648053987999074*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000061759747459797292648053987999074*array_vels[3,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000067916457716342943401243131998673*array_vels[3,0]*cos(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[3,0]*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) - 0.000018349886738719767173914346365063*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) - 0.000018349886738719767173914346365063*array_vels[3,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000046147876839521741265506259439426*array_vels[3,0]*sin(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000062333178771181963254674636929534*array_vels[3,0]*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) - 0.00000023477744314907700565386397703181*array_vels[2,0]*sin(array_poses[1,0] + array_poses[2,0] + array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0]))],\
                           [(12.393096591115689462490530868653*(0.000011089877593033423757847637491665*array_vels[1,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000046679903642746034319030001569579*array_vels[2,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) - 0.000032949940073977341546754725149535*array_vels[1,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) - 0.00013869404912582092959861518971449*array_vels[2,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[1,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[2,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.000014388836629933194457940340309125*array_vels[1,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.000014388836629933194457940340309125*array_vels[2,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.00000029507858587037714041261734139187*array_vels[1,0]*cos(2.0*array_poses[1,0]) + 0.00000029507858587037714041261734139187*array_vels[1,0]*cos(2.0*array_poses[2,0]) - 0.00000044261787880556571061892601208781*array_vels[2,0]*cos(2.0*array_poses[1,0]) + 0.00000014753929293518857020630867069594*array_vels[2,0]*cos(2.0*array_poses[2,0]) + 0.00000038870777482652758327933797037624*array_vels[1,0]*sin(2.0*array_poses[1,0]) + 0.00000038870777482652758327933797037624*array_vels[1,0]*sin(2.0*array_poses[2,0]) + 0.00000058306166223979137491900695556436*array_vels[2,0]*sin(2.0*array_poses[1,0]) + 0.00000019435388741326379163966898518812*array_vels[2,0]*sin(2.0*array_poses[2,0]) - 0.000054846619794972429920141577098329*array_vels[1,0]*cos(array_poses[2,0]) - 0.00003851318749051963871791842604083*array_vels[2,0]*cos(array_poses[2,0]) - 0.00016295877211844301176698376951963*array_vels[1,0]*sin(array_poses[2,0]) - 0.00011442932613319884743024660990935*array_vels[2,0]*sin(array_poses[2,0]) - 0.00000048802162457195685884647870838906*array_vels[1,0]*sin(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) + 0.00000024401081228597842942323935419453*array_vels[2,0]*sin(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) + 0.000019256593745259819358959213020415*array_vels[1,0]*cos(2.0*array_poses[1,0] + 3.0*array_poses[2,0]) + 0.000057214663066599423715123304954675*array_vels[1,0]*sin(2.0*array_poses[1,0] + 3.0*array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0])),(12.393096591115689462490530868653*(0.00000073203243685793528826971806258359*array_vels[2,0] + 0.000032949940073977341546754725149535*array_vels[1,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.00013869404912582092959861518971449*array_vels[2,0]*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000011089877593033423757847637491665*array_vels[1,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000046679903642746034319030001569579*array_vels[2,0]*sin(2.0*array_poses[1,0] + array_poses[2,0]) + 0.000014388836629933194457940340309125*array_vels[1,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000014388836629933194457940340309125*array_vels[2,0]*cos(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[1,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) + 0.000021176246481773180157534027188411*array_vels[2,0]*sin(2.0*array_poses[1,0] - 1.0*array_poses[2,0]) - 0.00000038870777482652758327933797037624*array_vels[1,0]*cos(2.0*array_poses[1,0]) - 0.00000058306166223979137491900695556436*array_vels[2,0]*cos(2.0*array_poses[1,0]) + 0.00000019435388741326379163966898518812*array_vels[2,0]*cos(2.0*array_poses[2,0]) - 0.00000029507858587037714041261734139187*array_vels[1,0]*sin(2.0*array_poses[1,0]) - 0.00000044261787880556571061892601208781*array_vels[2,0]*sin(2.0*array_poses[1,0]) - 0.00000014753929293518857020630867069594*array_vels[2,0]*sin(2.0*array_poses[2,0]) - 0.00016295877211844301176698376951963*array_vels[2,0]*cos(array_poses[2,0]) + 0.00000048802162457195685884647870838906*array_vels[1,0]*cos(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) - 0.00000024401081228597842942323935419453*array_vels[2,0]*cos(2.0*array_poses[1,0] + 2.0*array_poses[2,0]) + 0.000054846619794972429920141577098329*array_vels[2,0]*sin(array_poses[2,0]) - 0.000057214663066599423715123304954675*array_vels[1,0]*cos(2.0*array_poses[1,0] + 3.0*array_poses[2,0]) + 0.000019256593745259819358959213020415*array_vels[1,0]*sin(2.0*array_poses[1,0] + 3.0*array_poses[2,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0])), -(6.1965482955578447312452654343266*(0.0000012301346071758212453528510987523*array_vels[1,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000023477744314907700565386397703181*array_vels[2,0]*cos(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) + 0.000000062333178771181963254674636929534*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000062333178771181963254674636929534*array_vels[2,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000012301346071758212453528510987523*array_vels[2,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000015651829543271800376924265135454*array_vels[3,0]*cos(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) + 0.000000062333178771181963254674636929534*array_vels[3,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.00000012466635754236392650934927385907*array_vels[3,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000012301346071758212453528510987523*array_vels[3,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[1,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[2,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[2,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[3,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000094637604060347356473134633731202*array_vels[3,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[3,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0] + array_poses[3,0]) - 0.0000062233402715820258713648653506498*array_vels[1,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.000040137590926689301431357553545922*array_vels[2,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.000032355408968495547238318382630818*array_vels[3,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.0000020945738194573054747217346601561*array_vels[1,0]*sin(array_poses[1,0] + array_poses[3,0]) - 0.000013509006974121133933904142467225*array_vels[2,0]*sin(array_poses[1,0] + array_poses[3,0]) - 0.000010889777769779084336715637963644*array_vels[3,0]*sin(array_poses[1,0] + array_poses[3,0]) + 0.0000062233402715820258713648653506498*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.0000012301346071758212453528510987523*array_vels[1,0]*cos(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) - 0.000012126546467137741302549481014413*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.0000012301346071758212453528510987523*array_vels[2,0]*cos(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) + 0.000032355408968495547238318382630818*array_vels[3,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.0000012301346071758212453528510987523*array_vels[3,0]*cos(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) + 0.000033914250655107275559992688195273*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.000010567704780526012980875175449959*array_vels[3,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.0000020945738194573054747217346601561*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[1,0]*sin(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) + 0.0000040814009265224237900836641397514*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[2,0]*sin(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) - 0.000010889777769779084336715637963644*array_vels[3,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000018104058248269486959230379712567*array_vels[3,0]*sin(array_poses[1,0] + 4.0*array_poses[2,0] + array_poses[3,0]) + 0.000011414433154663828459182407807069*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.0000035567455416376796676168942963269*array_vels[3,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.000018349886738719767173914346365063*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) + 0.000018349886738719767173914346365063*array_vels[3,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000046147876839521741265506259439426*array_vels[3,0]*cos(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.000000062333178771181963254674636929534*array_vels[3,0]*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) - 0.0000061759747459797292648053987999074*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000061759747459797292648053987999074*array_vels[3,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) + 0.0000067916457716342943401243131998673*array_vels[3,0]*sin(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[3,0]*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) + 0.00000023477744314907700565386397703181*array_vels[2,0]*cos(array_poses[1,0] + array_poses[2,0] + array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0]))],\
                           [ -(12.393096591115689462490530868653*(0.0000000236594010150868391182836584328*array_vels[1,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000047318802030173678236567316865601*array_vels[1,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000000236594010150868391182836584328*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000070978203045260517354850975298401*array_vels[2,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000005959686761779894122900711012458*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0]) - 0.000000005959686761779894122900711012458*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0]) - 0.00000007825914771635900188462132567727*array_vels[1,0]*sin(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.000000031166589385590981627337318464767*array_vels[1,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000062333178771181963254674636929534*array_vels[1,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000039129573858179500942310662838635*array_vels[2,0]*sin(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) - 0.000000031166589385590981627337318464767*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000093499768156772944882011955394301*array_vels[2,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000017707257813529208766126897548914*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0]) - 0.000000017707257813529208766126897548914*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0]) - 0.000004397601975160889430996951651744*array_vels[1,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.0000074855893481507540633996510516977*array_vels[2,0]*cos(array_poses[1,0] + array_poses[3,0]) + 0.000013066034348456760683476758640084*array_vels[1,0]*sin(array_poses[1,0] + array_poses[3,0]) + 0.000022240977717816644270433931822616*array_vels[2,0]*sin(array_poses[1,0] + array_poses[3,0]) - 0.000004397601975160889430996951651744*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000013096146021710247985942522517903*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000001545343237957477264518306259928*array_vels[1,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0]) + 0.0000017783727708188398338084471481634*array_vels[1,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.00000001545343237957477264518306259928*array_vels[2,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0]) + 0.0000074855893481507540633996510516977*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.000013066034348456760683476758640084*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000038910909790968770965195854575523*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.000000010500298722571454324661254081789*array_vels[1,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0]) - 0.0000052838523902630064904375877249794*array_vels[1,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.000000010500298722571454324661254081789*array_vels[2,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0]) - 0.000022240977717816644270433931822616*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.000000011919373523559788245801422024916*array_vels[1,0]*cos(array_poses[1,0]) + 0.0000030879873729898646324026993999537*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) + 0.0000033958228858171471700621565999336*array_vels[1,0]*cos(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000033958228858171471700621565999336*array_vels[2,0]*cos(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000000236594010150868391182836584328*array_vels[1,0]*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) - 0.000000035414515627058417532253795097828*array_vels[1,0]*sin(array_poses[1,0]) + 0.0000091749433693598835869571731825317*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) + 0.0000023073938419760870632753129719713*array_vels[1,0]*sin(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000023073938419760870632753129719713*array_vels[2,0]*sin(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000031166589385590981627337318464767*array_vels[1,0]*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) - 0.0000001173887215745385028269319885159*array_vels[2,0]*sin(array_poses[1,0] + array_poses[2,0] + array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0])), -(12.393096591115689462490530868653*(0.00000007825914771635900188462132567727*array_vels[1,0]*cos(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) + 0.000000031166589385590981627337318464767*array_vels[1,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000062333178771181963254674636929534*array_vels[1,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.000000039129573858179500942310662838635*array_vels[2,0]*cos(array_poses[1,0] + array_poses[2,0] - 1.0*array_poses[3,0]) + 0.000000031166589385590981627337318464767*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) - 0.000000093499768156772944882011955394301*array_vels[2,0]*cos(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.000000017707257813529208766126897548914*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0]) + 0.000000017707257813529208766126897548914*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0]) + 0.0000000236594010150868391182836584328*array_vels[1,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.000000047318802030173678236567316865601*array_vels[1,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000000236594010150868391182836584328*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[2,0] + array_poses[3,0]) + 0.000000070978203045260517354850975298401*array_vels[2,0]*sin(array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.000000005959686761779894122900711012458*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0]) - 0.000000005959686761779894122900711012458*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0]) - 0.000013066034348456760683476758640084*array_vels[1,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.000022240977717816644270433931822616*array_vels[2,0]*cos(array_poses[1,0] + array_poses[3,0]) - 0.000004397601975160889430996951651744*array_vels[1,0]*sin(array_poses[1,0] + array_poses[3,0]) - 0.0000074855893481507540633996510516977*array_vels[2,0]*sin(array_poses[1,0] + array_poses[3,0]) + 0.000013066034348456760683476758640084*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.0000038910909790968770965195854575523*array_vels[2,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.000000010500298722571454324661254081789*array_vels[1,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0]) + 0.0000052838523902630064904375877249794*array_vels[1,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.000000010500298722571454324661254081789*array_vels[2,0]*cos(array_poses[1,0] - 2.0*array_poses[2,0]) + 0.000022240977717816644270433931822616*array_vels[2,0]*cos(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.000004397601975160889430996951651744*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.0000013096146021710247985942522517903*array_vels[2,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.00000001545343237957477264518306259928*array_vels[1,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0]) + 0.0000017783727708188398338084471481634*array_vels[1,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) - 0.00000001545343237957477264518306259928*array_vels[2,0]*sin(array_poses[1,0] - 2.0*array_poses[2,0]) + 0.0000074855893481507540633996510516977*array_vels[2,0]*sin(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.000000035414515627058417532253795097828*array_vels[1,0]*cos(array_poses[1,0]) - 0.0000091749433693598835869571731825317*array_vels[1,0]*cos(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) + 0.0000023073938419760870632753129719713*array_vels[1,0]*cos(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000023073938419760870632753129719713*array_vels[2,0]*cos(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.000000031166589385590981627337318464767*array_vels[1,0]*cos(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) + 0.000000011919373523559788245801422024916*array_vels[1,0]*sin(array_poses[1,0]) + 0.0000030879873729898646324026993999537*array_vels[1,0]*sin(array_poses[1,0] + 2.0*array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000033958228858171471700621565999336*array_vels[1,0]*sin(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) - 0.0000033958228858171471700621565999336*array_vels[2,0]*sin(2.0*array_poses[2,0] - 1.0*array_poses[1,0] + array_poses[3,0]) + 0.0000000236594010150868391182836584328*array_vels[1,0]*sin(array_poses[1,0] + 3.0*array_poses[2,0] + array_poses[3,0]) + 0.0000001173887215745385028269319885159*array_vels[2,0]*cos(array_poses[1,0] + array_poses[2,0] + array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0])),-(12.393096591115689462490530868653*(0.00000084731856930257572080657156757769*array_vels[3,0]*cos(array_poses[2,0] + 2.0*array_poses[3,0]) - 0.000002719244617526501354400213739497*array_vels[2,0]*cos(array_poses[2,0] + 2.0*array_poses[3,0]) - 0.00000001882445539169299431332681367841*array_vels[2,0] + 0.00000091520925034094576585724545797076*array_vels[2,0]*sin(array_poses[2,0] + 2.0*array_poses[3,0]) - 0.00000028517985752850915574952258467949*array_vels[3,0]*sin(array_poses[2,0] + 2.0*array_poses[3,0]) - 0.0000000016838279031515584155026787045557*array_vels[3,0]*cos(3.0*array_poses[2,0] + array_poses[3,0]) - 0.0000000049978742738733698137598123890101*array_vels[2,0]*cos(2.0*array_poses[2,0]) + 0.00000001882445539169299431332681367841*array_vels[2,0]*cos(2.0*array_poses[3,0]) + 0.000000012549636927795329542217875785607*array_vels[3,0]*cos(2.0*array_poses[3,0]) + 0.0000000024781124163886105413815559184205*array_vels[3,0]*sin(3.0*array_poses[2,0] + array_poses[3,0]) + 0.0000000037940215467793255210079674662839*array_vels[2,0]*sin(2.0*array_poses[2,0]) + 0.0000000056790717259550878354722185818877*array_vels[2,0]*cos(array_poses[2,0] + array_poses[3,0]) + 0.0000000056790717259550878354722185818877*array_vels[3,0]*cos(array_poses[2,0] + array_poses[3,0]) - 0.0000000019113907382380476430967160359155*array_vels[2,0]*sin(array_poses[2,0] + array_poses[3,0]) - 0.0000000019113907382380476430967160359155*array_vels[3,0]*sin(array_poses[2,0] + array_poses[3,0]) - 0.0000000056790717259550878354722185818877*array_vels[2,0]*cos(array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000014712939187105509320044522915508*array_vels[2,0]*cos(array_poses[2,0] - 2.0*array_poses[3,0]) - 0.0000000028395358629775439177361092909438*array_vels[3,0]*cos(array_poses[2,0] - 1.0*array_poses[3,0]) - 0.0000014712939187105509320044522915508*array_vels[3,0]*cos(array_poses[2,0] - 2.0*array_poses[3,0]) + 0.0000000019113907382380476430967160359155*array_vels[2,0]*sin(array_poses[2,0] - 1.0*array_poses[3,0]) + 0.00000049518965513265469245209687577658*array_vels[2,0]*sin(array_poses[2,0] - 2.0*array_poses[3,0]) + 0.00000000095569536911902382154835801795777*array_vels[3,0]*sin(array_poses[2,0] - 1.0*array_poses[3,0]) + 0.00000049518965513265469245209687577658*array_vels[3,0]*sin(array_poses[2,0] - 2.0*array_poses[3,0]) + 0.0000041905385362370522864046660310477*array_vels[2,0]*cos(array_poses[2,0]) + 0.0000000049978742738733698137598123890101*array_vels[2,0]*cos(2.0*array_poses[2,0] + 2.0*array_poses[3,0]) - 0.0000000099957485477467396275196247780201*array_vels[3,0]*cos(2.0*array_poses[2,0] + 2.0*array_poses[3,0]) - 0.0000014103989054736004583093423337473*array_vels[2,0]*sin(array_poses[2,0]) - 0.0000000037940215467793255210079674662839*array_vels[2,0]*sin(2.0*array_poses[2,0] + 2.0*array_poses[3,0]) + 0.0000000075880430935586510420159349325677*array_vels[3,0]*sin(2.0*array_poses[2,0] + 2.0*array_poses[3,0]) + 0.00000037001367649928532146682918818532*array_vels[3,0]*cos(3.0*array_poses[2,0] + 2.0*array_poses[3,0]) - 0.00000054455415796963772019116743236536*array_vels[3,0]*sin(3.0*array_poses[2,0] + 2.0*array_poses[3,0])))/(0.0028864291829225755969117457465885*cos(array_poses[2,0]) + 0.0028586930681370236738999071750982*sin(array_poses[2,0]) - 0.0027774398739559126177071323633547*cos(array_poses[2,0])**3 - 0.0018872149334969158344131251946081*cos(array_poses[2,0])**2*sin(array_poses[2,0]))]])

            g = np.matrix([[(34.534957403365486164894740547772*(0.004222989068339999884482663308205*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.0011702998592249999407335799905816*sin(2.0*array_poses[1,0] + array_poses[2,0]) + 0.004222989068339999884482663308205*cos(array_poses[2,0]) - 0.0011702998592249999407335799905816*sin(array_poses[2,0])))/(0.047766999999999996961985715415722*cos(array_poses[2,0]) + 0.14192399999999999460342792190204*sin(array_poses[2,0]))],\
                           [(34.534957403365486164894740547772*(0.004222989068339999884482663308205*sin(2.0*array_poses[1,0] + array_poses[2,0]) - 0.0011702998592249999407335799905816*cos(2.0*array_poses[1,0] + array_poses[2,0]) + 0.0050984367780149996605704280017157*cos(array_poses[2,0]) + 0.015894161720219999350575154704046*sin(array_poses[2,0])))/(0.047766999999999996961985715415722*cos(array_poses[2,0]) + 0.14192399999999999460342792190204*sin(array_poses[2,0]))],\
                           [-(69.069914806730972329789481095543*(0.00020344438477991318706079621747573*cos(array_poses[1,0] + array_poses[3,0]) - 0.00066426872218756557474159382126189*sin(array_poses[1,0] + array_poses[3,0]) + 0.0001096097420672526918127777738309*cos(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) - 0.000093834642712660495248018443644833*cos(array_poses[1,0] - 1.0*array_poses[3,0]) + 0.00032566945868806438400377387721001*sin(array_poses[1,0] + 2.0*array_poses[2,0] + array_poses[3,0]) + 0.00033859926349950119073781994405188*sin(array_poses[1,0] - 1.0*array_poses[3,0])))/(0.047766999999999996961985715415722*cos(array_poses[2,0]) + 0.14192399999999999460342792190204*sin(array_poses[2,0]))]])
            # print("M,c,g:")
            # print(M)
            # print(C)
            # print(g)
            #Compute control input
            control_from_errors = self.target_acc -np.dot(self.KD, err_vels) - np.dot(self.KP, err_poses) - np.dot(self.KI, self.eI)
            u = g + np.dot(C, v_e) + np.dot(M, control_from_errors)
            # print("Derivative contribution: ")
            # print(-np.dot(self.KD, err_vels))
            # print("Proportional_contribution: ")
            # print(- np.dot(self.KP, err_poses))
            # print("u: ")
            # print(u)
            J_e_tr = J_e.T
            control_torque = np.dot(J_e_tr, u)
            #Add static and viscous friction:
            control_torque = control_torque + np.dot(self.Fs, np.sign(array_vels[1:4])) + np.dot(self.Fv, array_vels[1:4])
            # print("Torques:")
            # print(control_torque)
            # print("Friction Torques: ")
            # print(np.dot(self.Fs, np.sign(array_vels[1:4])) + np.dot(self.Fv, array_vels[1:4]))
            #Create ROS message
            self.torques.data = [0.0, control_torque[0], control_torque[1], control_torque[2], 0.0, 0.0]
            self.torque_pub.publish(self.torques)
            self.pub_rate.sleep()



if __name__ == '__main__':
    #Iitialize the node
    rospy.init_node('windowx_controller')
    #Create windowx controller object
    wc = WindowxController()

    try:
        rospy.spin()
    except KeyboardInterrupt:
        print "Shutting down ROS WindowX controller node"
